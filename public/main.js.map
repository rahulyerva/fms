{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/common/header/header.component.css","webpack:///./src/app/components/common/header/header.component.html","webpack:///./src/app/components/common/header/header.component.ts","webpack:///./src/app/components/common/label/label.component.css","webpack:///./src/app/components/common/label/label.component.html","webpack:///./src/app/components/common/label/label.component.ts","webpack:///./src/app/components/common/sidemenu/sidemenu.component.css","webpack:///./src/app/components/common/sidemenu/sidemenu.component.html","webpack:///./src/app/components/common/sidemenu/sidemenu.component.ts","webpack:///./src/app/components/common/tablelist/tablelist.component.css","webpack:///./src/app/components/common/tablelist/tablelist.component.html","webpack:///./src/app/components/common/tablelist/tablelist.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/machine/area/area.component.css","webpack:///./src/app/components/machine/area/area.component.html","webpack:///./src/app/components/machine/area/area.component.ts","webpack:///./src/app/components/machine/document/document.component.css","webpack:///./src/app/components/machine/document/document.component.html","webpack:///./src/app/components/machine/document/document.component.ts","webpack:///./src/app/components/machine/line/line.component.css","webpack:///./src/app/components/machine/line/line.component.html","webpack:///./src/app/components/machine/line/line.component.ts","webpack:///./src/app/components/machine/machine/machine.component.css","webpack:///./src/app/components/machine/machine/machine.component.html","webpack:///./src/app/components/machine/machine/machine.component.ts","webpack:///./src/app/components/machine/machinegroup/machinegroup.component.css","webpack:///./src/app/components/machine/machinegroup/machinegroup.component.html","webpack:///./src/app/components/machine/machinegroup/machinegroup.component.ts","webpack:///./src/app/components/machine/part/part.component.css","webpack:///./src/app/components/machine/part/part.component.html","webpack:///./src/app/components/machine/part/part.component.ts","webpack:///./src/app/components/machine/reasons/reasons.component.css","webpack:///./src/app/components/machine/reasons/reasons.component.html","webpack:///./src/app/components/machine/reasons/reasons.component.ts","webpack:///./src/app/components/machine/steps/steps.component.css","webpack:///./src/app/components/machine/steps/steps.component.html","webpack:///./src/app/components/machine/steps/steps.component.ts","webpack:///./src/app/components/machine/template/template.component.css","webpack:///./src/app/components/machine/template/template.component.html","webpack:///./src/app/components/machine/template/template.component.ts","webpack:///./src/app/components/settings/import/import.component.css","webpack:///./src/app/components/settings/import/import.component.html","webpack:///./src/app/components/settings/import/import.component.ts","webpack:///./src/app/components/settings/settings/settings.component.css","webpack:///./src/app/components/settings/settings/settings.component.html","webpack:///./src/app/components/settings/settings/settings.component.ts","webpack:///./src/app/components/user/user/user.component.css","webpack:///./src/app/components/user/user/user.component.html","webpack:///./src/app/components/user/user/user.component.ts","webpack:///./src/app/components/user/usergroup/usergroup.component.css","webpack:///./src/app/components/user/usergroup/usergroup.component.html","webpack:///./src/app/components/user/usergroup/usergroup.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/common/auth.service.ts","webpack:///./src/app/services/common/privillages.ts","webpack:///./src/app/services/home/maintenance.service.ts","webpack:///./src/app/services/machine/area.service.ts","webpack:///./src/app/services/machine/document.service.ts","webpack:///./src/app/services/machine/line.service.ts","webpack:///./src/app/services/machine/machine.service.ts","webpack:///./src/app/services/machine/machinegroup.service.ts","webpack:///./src/app/services/machine/part.service.ts","webpack:///./src/app/services/machine/reason.service.ts","webpack:///./src/app/services/machine/stepgroup.service.ts","webpack:///./src/app/services/machine/template.service.ts","webpack:///./src/app/services/settings/import.service.ts","webpack:///./src/app/services/settings/setting.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/services/user/usergroup.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,uUAAuU,0EAA0E,yF;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvW;AACiB;AACV;AAMjD;IAME,sBACU,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QANjC,UAAK,GAAG,QAAQ,CAAC;QACV,WAAM,GAAmB,IAAI,8DAAa,CAAC;YAChD,aAAa,EAAE,oBAAoB;YACnC,SAAS,EAAE,MAAM;SAClB,CAAC,CAAC;IAGC,CAAC;IARM,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;yCAQsB,yEAAW;OAPtB,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACc;AACV;AACW;AACD;AACO;AAChB;AACG;AAC4B;AAC1B;AACD;AAEH;AAC+B;AACV;AACH;AACK;AACe;AACH;AACE;AACa;AACxB;AACA;AACS;AACP;AACY;AACP;AACM;AACD;AACT;AACH;AACY;AAErC;AACa;AACF;AAG3D,IAAM,SAAS,GAAY;IACzB,EAAC,IAAI,EAAG,EAAE,EAAE,SAAS,EAAE,iFAAc,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IAChE,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnE,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,mFAAa,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnE,EAAC,IAAI,EAAG,WAAW,EAAE,SAAS,EAAE,kGAAkB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IAC7E,EAAC,IAAI,EAAG,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACzE,EAAC,IAAI,EAAG,cAAc,EAAE,SAAS,EAAE,8GAAqB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnF,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,sFAAa,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnE,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,sFAAa,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnE,EAAC,IAAI,EAAG,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACzE,EAAC,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,6FAAe,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACvE,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAE,mGAAiB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IAC3E,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IAC3E,EAAC,IAAI,EAAG,MAAM,EAAE,SAAS,EAAE,sFAAa,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACnE,EAAC,IAAI,EAAG,OAAO,EAAE,SAAS,EAAE,yFAAc,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;IACrE,EAAC,IAAI,EAAG,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAE,WAAW,EAAC,CAAC,6DAAS,CAAC,EAAE;CAC5E,CAAC;AA6CF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,2FAAe;gBACf,iFAAc;gBACd,8EAAa;gBACb,mFAAa;gBACb,kGAAkB;gBAClB,+FAAgB;gBAChB,iGAAiB;gBACjB,8GAAqB;gBACrB,sFAAa;gBACb,sFAAa;gBACb,+FAAgB;gBAChB,wFAAc;gBACd,oGAAkB;gBAClB,6FAAe;gBACf,mGAAiB;gBACjB,kGAAiB;gBACjB,yFAAc;gBACd,sFAAa;gBACb,kGAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,oEAAS;gBACT,2DAAe;gBACf,iEAAgB;gBAChB,4FAAuB;gBACvB,gEAAW,CAAC,OAAO,EAAE;gBACrB,8DAAa,CAAC,OAAO,EAAE;gBACvB,2EAAkB,CAAC,OAAO,EAAE;gBAC5B,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE;gBACT,0EAAW;gBACX,6DAAS;gBACT,wEAAW;aACZ;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpGtB,gCAAgC,kCAAkC,8BAA8B,KAAK,gCAAgC,oBAAoB,KAAK,yBAAyB,oBAAoB,wBAAwB,KAAK,wFAAwF,sCAAsC,oBAAoB,KAAK,2CAA2C,+BAA+B,KAAK,cAAc,6BAA6B,KAAK,kBAAkB,oBAAoB,qBAAqB,qBAAqB,MAAM,wDAAwD,sCAAsC,oBAAoB,KAAK,cAAc,qBAAqB,qBAAqB,sBAAsB,KAAK,+CAA+C,uqD;;;;;;;;;;;ACA70B,2hCAA2hC,eAAe,oNAAoN,eAAe,uNAAuN,eAAe,6NAA6N,eAAe,8LAA8L,MAAM,2yBAA2yB,MAAM,uaAAua,eAAe,ghBAAghB,eAAe,sQAAsQ,eAAe,slBAAslB,eAAe,iQAAiQ,eAAe,oQAAoQ,eAAe,+QAA+Q,eAAe,wSAAwS,eAAe,2QAA2Q,eAAe,0QAA0Q,eAAe,kQAAkQ,eAAe,4QAA4Q,eAAe,qkBAAqkB,eAAe,2QAA2Q,eAAe,4X;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtjP;AACgB;AACzB;AAOzC;IAGE,yBACU,WAAuB,EACvB,MAAa;QADb,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAO;QAJhB,gBAAW,GAAG,IAAI,CAAC;QAMxB,0BAA0B;IAC3B,CAAC;IAEF,kCAAQ,GAAR;IAEA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW;QACpC,OAAO,KAAK,CAAC;IACf,CAAC;IACD,oCAAU,GAAV,UAAW,KAAK;QACd,IAAI,IAAI,GAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC;IAxBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,wHAAsC;;SAEvC,CAAC;yCAKsB,yEAAW;YAChB,sDAAM;OALZ,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzB2B;;;;;;;;;;;;ACT5B,+DAA+D,mK;;;;;;;;;;;ACA/D,oD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,qHAAqC;;SAEtC,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,+BAA+B,mBAAmB,kCAAkC,oBAAoB,wBAAwB,4BAA4B,qBAAqB,KAAK,kCAAkC,4CAA4C,2BAA2B,yBAAyB,wBAAwB,+BAA+B,8BAA8B,KAAK,+CAA+C,2+B;;;;;;;;;;;ACAjc,iSAAiS,eAAe,uVAAuV,eAAe,qPAAqP,eAAe,uQAAuQ,eAAe,uOAAuO,eAAe,0OAA0O,eAAe,iPAAiP,eAAe,gPAAgP,eAAe,wOAAwO,eAAe,kPAAkP,eAAe,yUAAyU,eAAe,4OAA4O,eAAe,mWAAmW,eAAe,iPAAiP,eAAe,6F;;;;;;;;;;;;;;;;;;;;;;;;;ACA3xH;AACI;AAOpE;IAGE,2BACU,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAEjC,CAAC;IAED,oCAAQ,GAAR;IAEA,CAAC;IAGD,oCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,0CAAc,GAAd;QACE,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;QACvF,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACvC,QAAQ,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IACxH,CAAC;IAZD;QADC,kEAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAGzC;IAfU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,8HAAwC;;SAEzC,CAAC;yCAKsB,yEAAW;OAJtB,iBAAiB,CA0B7B;IAAD,wBAAC;CAAA;AA1B6B;;;;;;;;;;;;ACR9B,+DAA+D,2K;;;;;;;;;;;ACA/D,wD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,iIAAyC;;SAE1C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,+DAA+D,uJ;;;;;;;;;;;ACA/D,+gBAA+gB,OAAO,KAAK,QAAQ,y3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjf;AACe;AACxB;AAC+B;AACK;AACpB;AAOzD;IAQE,uBACU,WAAwB,EACxB,MAAc,EACd,cAA8B,EAC9B,kBAAsC,EACtC,cAA8B;QALxC,iBAYC;QAXS,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAXxC,iBAAY,GAAG;YACb,GAAG,EAAE,GAAG;YACR,WAAW,EAAE,EAAE;YACf,SAAS,EAAC,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb;QAQC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;IAEA,CAAC;IAED,8BAAM,GAAN;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAE;YACrD,OAAO,EAAE,CAAC,GAAG,KAAK,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACX,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,2CAA2C;gBACjD,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAiB,GAAjB,UAAkB,KAAK;QAAvB,iBAaC;QAXC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACnF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACtB,KAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBACpC,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aAC/C;iBAAI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC;gBAC5B,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAtDU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;yCAUuB,yEAAW;YAChB,sDAAM;YACE,gFAAc;YACV,qFAAkB;YACtB,+DAAc;OAb7B,aAAa,CAuDzB;IAAD,oBAAC;CAAA;AAvDyB;;;;;;;;;;;;ACZ1B,+DAA+D,uJ;;;;;;;;;;;ACA/D,q6CAAq6C,qvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt2C;AACE;AACxB;AACgB;AACJ;AAQrD;IAME,wBACU,WAAwB,EACxB,MAAc,EACd,cAA8B,EAC9B,YAA4B;QAH5B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAgB;QATtC,aAAQ,GAAS,EAAE,CAAC;QACpB,aAAQ,GAAS,EAAE,CAAC;QAEpB,cAAS,GAAS,EAAE,CAAC;IAOjB,CAAC;IAEL,iCAAQ,GAAR;IACA,CAAC;IAED,kCAAS,GAAT,UAAU,QAA0B;QAElC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,sCAAa,GAAb;QAAA,iBAmCC;QAlCC,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YAChD,IAAM,IAAI,GAAG;gBACX,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YAED,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;oBACnB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACjF,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChC;qBAAM;oBACL,IAAI,KAAK,GAAU;wBACjB,IAAI,EAAE,OAAO;wBACb,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,4BAA4B;wBAClC,eAAe,EAAE,IAAI;qBACtB,CAAC;oBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,yEAAyE;gBAC/E,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAzEU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,8GAAqC;;SAEtC,CAAC;yCAQuB,yEAAW;YAChB,sDAAM;YACE,+DAAc;YAChB,kEAAc;OAV3B,cAAc,CA0E1B;IAAD,qBAAC;CAAA;AA1E0B;;;;;;;;;;;;ACZ3B,+DAA+D,+J;;;;;;;;;;;ACA/D,kZAAkZ,WAAW,gCAAgC,kBAAkB,o4DAAo4D,aAAa,mrBAAmrB,WAAW,29B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5+F;AACmB;AACA;AACZ;AAOzD;IAYE,uBACU,WAAwB,EACxB,WAAwB,EACxB,cAA8B;QAF9B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAdxC,SAAI,GAAG;YACL,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QASpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,2BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;IACD,4BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,gCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,sCAAc,GAAd,UAAe,KAAK;QAApB,iBAQC;QAPC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,oCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,qCAAa,GAAb,UAAc,UAAU;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;YAC/C,OAAO,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,kCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;YACnD,OAAO,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,0BAA0B;oBAChC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IA9HU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mHAAoC;;SAErC,CAAC;yCAcuB,0EAAW;YACX,0EAAW;YACR,+DAAc;OAf7B,aAAa,CA+HzB;IAAD,oBAAC;CAAA;AA/HyB;;;;;;;;;;;;ACV1B,+DAA+D,2K;;;;;;;;;;;ACA/D,oaAAoa,gBAAgB,gCAAgC,uBAAuB,o6CAAo6C,gBAAgB,sKAAsK,0BAA0B,0gBAA0gB,MAAM,8+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7jF;AACkB;AAEA;AACS;AACpB;AAOzD;IAaE,2BACU,WAAwB,EACxB,eAAgC,EAChC,cAA8B;QAHxC,iBAiBC;QAhBS,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAdxC,aAAQ,GAAG;YACT,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,kBAAkB,EAAE,EAAE;YACtB,gBAAgB,EAAE,EAAE;SACrB,CAAC;QACF,UAAK,GAAG,EAAE,CAAC;QACX,qBAAgB,GAAY,KAAK,CAAC;QAElC,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAMpB,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAY,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,UAAC,IAAI;YACtC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,UAAC,IAAS,EAAE,QAAa,EAAE,MAAW,EAAE,OAAY;YACjF,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC/B,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAClC,KAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,GAAG,CAAC,UAAU,CAAC;YAC9C,KAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IACD,+BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,kBAAkB,EAAE,EAAE;YACtB,gBAAgB,EAAE,EAAE;SACrB,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IACD,gCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,oCAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,QAAQ,CAAC,gBAAgB,KAAK,EAAE,IAAI,QAAQ,CAAC,cAAc,IAAI,EAAE,EAAE;YACrE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SAC5C;IACH,CAAC;IACD,sCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IACD,sCAAU,GAAV,UAAW,IAAI;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7B;QACD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,EAAE,CAAC;IACpC,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;YAChD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,EAAE,EAAE;YACjE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,8BAA8B;oBACpC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,kCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,gCAAgC;gBACtC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,gCAAgC;gBACtC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IA/HU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,+HAAwC;;SAEzC,CAAC;yCAeuB,yEAAW;YACP,kFAAe;YAChB,+DAAc;OAhB7B,iBAAiB,CAgI7B;IAAD,wBAAC;CAAA;AAhI6B;;;;;;;;;;;;ACZ9B,+DAA+D,+J;;;;;;;;;;;ACA/D,gaAAga,WAAW,kCAAkC,kBAAkB,kvD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7a;AACmB;AACZ;AAOzD;IASE,uBACU,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QATxC,SAAI,GAAG;YACL,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,2BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;IACJ,CAAC;IACD,4BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,gCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,0BAA0B;oBAChC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;SACJ;aAAI;YACH,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IA7FU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mHAAoC;;SAErC,CAAC;yCAWuB,0EAAW;YACR,+DAAc;OAX7B,aAAa,CA+FzB;IAAD,oBAAC;CAAA;AA/FyB;;;;;;;;;;;;ACT1B,+DAA+D,uK;;;;;;;;;;;ACA/D,8ZAA8Z,cAAc,yBAAyB,mBAAmB,yBAAyB,mBAAmB,+8BAA+8B,kBAAkB,KAAK,mBAAmB,kkBAAkkB,6DAA6D,icAAic,UAAU,KAAK,WAAW,oYAAoY,UAAU,KAAK,WAAW,y9DAAy9D,0FAA0F,cAAc,44B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApgK;AACyB;AACN;AACA;AACgB;AAC5B;AAOzD;IAmBE,0BACU,cAA8B,EAC9B,WAAwB,EACxB,WAAwB,EACxB,mBAAwC,EACxC,cAA8B;QALxC,iBAiBC;QAhBS,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAtBxC,YAAO,GAAG;YACR,MAAM,EAAE,EAAE;YACV,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,EAAE;SACd,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAWpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACxD,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAED,8BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG;YACb,MAAM,EAAE,EAAE;YACV,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,eAAe,EAAE,EAAE;YACnB,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IACD,+BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,mCAAQ,GAAR,UAAS,OAAO;QACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IACvD,CAAC;IAED,sCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qCAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;IAChJ,CAAC;IACD,+BAAI,GAAJ;QAAA,iBAuBC;QAtBC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,EAAE;eAC3D,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;YAC5G,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;gBACzD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,6BAA6B;oBACnC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,iCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACnE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,+BAA+B;gBACrC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,+BAA+B;gBACrC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gCAAK,GAAL;QACE,IAAI,aAAa,EAAE,QAAQ,CAAC;QAC5B,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;QACnE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,qCAAqC,CAAC,CAAC;QAC5E,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,iOAQuB,aAAa,2BAClD,CACT,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IACD,iCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAlJU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,4HAAuC;;SAExC,CAAC;yCAqB0B,gFAAc;YACjB,0EAAW;YACX,0EAAW;YACH,0FAAmB;YACxB,+DAAc;OAxB7B,gBAAgB,CAmJ5B;IAAD,uBAAC;CAAA;AAnJ4B;;;;;;;;;;;;ACZ7B,+DAA+D,uL;;;;;;;;;;;ACA/D,mbAAmb,mBAAmB,gCAAgC,0BAA0B,qrD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9c;AACmC;AAC5B;AAOzD;IASE,+BACU,mBAAwC,EACxC,cAA8B;QAD9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QATxC,iBAAY,GAAG;YACb,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAED,mCAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG;YAClB,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;IACJ,CAAC;IACD,oCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,wCAAQ,GAAR,UAAS,YAAY;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,mDAAmB,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACxD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,KAAK,EAAE,EAAE;YACzE,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxE,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,mCAAmC;oBACzC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;aAAI;YACH,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,sCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAClF,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,qCAAqC;gBAC3C,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3E,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,qCAAqC;gBAC3C,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IA7FU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,2IAA4C;;SAE7C,CAAC;yCAW+B,0FAAmB;YACxB,+DAAc;OAX7B,qBAAqB,CA+FjC;IAAD,4BAAC;CAAA;AA/FiC;;;;;;;;;;;;ACTlC,+DAA+D,+J;;;;;;;;;;;ACA/D,kZAAkZ,WAAW,gCAAgC,kBAAkB,unGAAunG,8FAA8F,WAAW,gzB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7nH;AACO;AACY;AAOrE;IAWE,uBACU,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAZxC,SAAI,GAAG;YACL,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,UAAU,EAAC,EAAE;YACb,mBAAmB,EAAC,EAAE;YACtB,QAAQ,EAAC,EAAE;SACZ,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,2BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,UAAU,EAAC,EAAE;YACb,mBAAmB,EAAC,EAAE;YACtB,QAAQ,EAAC,EAAE;SACZ,CAAC;IACJ,CAAC;IACD,4BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,gCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,0BAA0B;oBAChC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAC3D,CAAC;IAED,6BAAK,GAAL;QACE,IAAI,aAAa,EAAE,QAAQ,CAAC;QAC5B,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;QACnE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,qCAAqC,CAAC,CAAC;QAC5E,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,iOAQuB,aAAa,2BAClD,CACT,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAzHU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mHAAoC;;SAErC,CAAC;yCAauB,0EAAW;YACR,+DAAc;OAb7B,aAAa,CA2HzB;IAAD,oBAAC;CAAA;AA3HyB;;;;;;;;;;;;ACT1B,+DAA+D,uK;;;;;;;;;;;ACA/D,yaAAya,aAAa,kCAAkC,oBAAoB,wvD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1b;AACuB;AAChB;AAOzD;IASE,0BACU,aAA4B,EAC5B,cAA8B;QAD9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QATxC,WAAM,GAAG;YACP,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAED,8BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG;YACZ,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;SAClB,CAAC;IACJ,CAAC;IACD,+BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,mCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,wCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI;YAC/C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,EAAE,EAAE;YAC7D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBACtD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,4BAA4B;oBAClC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAI;YACH,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,iCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAChE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,8BAA8B;gBACpC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACzD,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,8BAA8B;gBACpC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IA7FU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,4HAAuC;;SAExC,CAAC;yCAWyB,8EAAa;YACZ,+DAAc;OAX7B,gBAAgB,CA8F5B;IAAD,uBAAC;CAAA;AA9F4B;;;;;;;;;;;;ACT7B,+DAA+D,mK;;;;;;;;;;;ACA/D,uaAAua,gBAAgB,gCAAgC,uBAAuB,29CAA29C,WAAW,k3CAAk3C,q6CAAq6C,aAAa,8nBAA8nB,eAAe,61BAA61B,aAAa,4oBAA4oB,WAAW,6wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv0N;AACgB;AACF;AACR;AACZ;AACJ;AAQrD;IAyBE,gCAAgC;IAChC,wBACU,gBAAkC,EAClC,eAAgC,EAChC,WAAwB,EACxB,cAA8B,EAC9B,YAA4B;QAJ5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAgB;QA7BtC,cAAS,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;SACZ,CAAC;QAGF,SAAI,GAAG;YACL,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;SAChB,CAAC;QACF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAiBpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,kCAAS,GAAT,UAAU,QAA0B,EAAE,KAAK,EAAE,IAAI;QAAjD,iBAcC;QAbC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,IAAI,GAAG;gBACV,MAAM,EAAE,EAAE;gBACV,aAAa,EAAE,EAAE;gBACjB,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,EAAE;aAChB,CAAC;SACH;aAAI;YACH,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,4BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG;YACf,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;SAChB,CAAC;IACJ,CAAC;IACD,6BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,iCAAQ,GAAR,UAAS,SAAS;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,sCAAa,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACrD,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,EAAE,EAAE;YACnE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC/D,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,+BAA+B;oBACrC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,+BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,iCAAiC;gBACvC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YAClE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,iCAAiC;gBACvC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,gCAAgC;IAChC,uCAAc,GAAd,UAAe,KAAK,EAAE,UAAU;QAAhC,iBAcC;QAbC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,KAAK,UAAU,EAAE;YACjD,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxD,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,qCAAY,GAAZ,UAAa,IAAI,EAAE,UAAU;QAC3B,IAAI,UAAU,KAAK,UAAU,EAAE;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;IACH,CAAC;IAED,0CAAiB,GAAjB,UAAkB,UAAU;QAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAU,EAAE;YAC3D,OAAO,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,sCAAa,GAAb,UAAc,UAAU;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,EAAE;YACnD,OAAO,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE;YAC3D,OAAO,EAAE,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;YACnD,OAAO,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAkB,GAAlB;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACrD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8CAAqB,GAArB;QAAA,iBAQC;QAPC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACxD,IAAI,MAAM,GAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,YAAE;gBACxC,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,mCAAU,GAAV,UAAW,IAAI;QAAf,iBAMC;QALC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;gBAC7D,OAAO,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAzNU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,sHAAqC;;SAEtC,CAAC;yCA4B4B,oFAAgB;YACjB,kFAAe;YACnB,0EAAW;YACR,+DAAc;YAChB,kEAAc;OA/B3B,cAAc,CA4N1B;IAAD,qBAAC;CAAA;AA5N0B;;;;;;;;;;;;ACb3B,+DAA+D,2K;;;;;;;;;;;ACA/D,kaAAka,eAAe,gCAAgC,sBAAsB,09BAA09B,cAAc,KAAK,eAAe,sbAAsb,YAAY,KAAK,aAAa,qkCAAqkC,aAAa,4nBAA4nB,WAAW,2gC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9lH;AACyB;AACF;AACI;AACE;AACtB;AAOzD;IAmBE,gCAAgC;IAEhC,2BACU,cAA8B,EAC9B,aAA4B,EAC5B,eAA+B,EAC/B,gBAAiC,EACjC,cAA8B;QALxC,iBAcC;QAbS,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAzBxC,aAAQ,GAAG;YACT,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,YAAY,EAAC,EAAE;SAChB,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAkBpB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI;YAC/C,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAED,+BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,YAAY,EAAC,EAAE;SAChB,CAAC;IACJ,CAAC;IACD,gCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,oCAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,cAAI;YACnD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,EAAE,EAAE;YACjE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC5D,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,8BAA8B;oBACpC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACH,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,kCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACtE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,gCAAgC;gBACtC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,gCAAgC;gBACtC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAEA,gCAAgC;IAChC,0CAAc,GAAd,UAAe,KAAK;QAApB,iBAQA;QAPC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,gDAAoB,GAApB,UAAqB,UAAU;QAC7B,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;YACpD,OAAO,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IACD,yCAAa,GAAb,UAAc,SAAS;QACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE;YACrE,OAAO,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAlJU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,+HAAwC;;SAEzC,CAAC;yCAuB0B,gFAAc;YACf,8EAAa;YACZ,kFAAe;YACd,oFAAgB;YACjB,+DAAc;OA1B7B,iBAAiB,CAoJ7B;IAAD,wBAAC;CAAA;AApJ6B;;;;;;;;;;;;ACZ9B,kCAAkC,wBAAwB,KAAK,+CAA+C,uW;;;;;;;;;;;ACA9G,ohBAAohB,SAAS,KAAK,OAAO,+YAA+Y,mBAAmB,gIAAgI,YAAY,6wBAA6wB,oBAAoB,uCAAuC,cAAc,+F;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn2D;AAC7C;AAC6C;AACjB;AAOzD;IA4BE,yBACS,aAA4B,EAC5B,cAA8B;QAFvC,iBAQE;QAPO,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QA3BvC,eAAU,GAAG;YACX;gBACE,OAAO,EAAE,SAAS;gBAClB,KAAK,EAAE,SAAS;aACjB;SACF,CAAC;QACF,WAAM,GAAW,EAAE,CAAC;QACpB,WAAM,GAAG;YACP,YAAY,EAAE,EAAE;YAChB,KAAK,EAAE,EAAE;SACV,CAAC;QACF,YAAO,GAAQ;YACb;gBACE,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE;oBACJ,YAAY,EAAE,SAAS;oBACvB,KAAK,EAAE,gDAAgD;iBACxD;aACF;SACF,CAAC;QAEF,UAAK,GAAwB,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;QACjE,aAAQ,GAAW,cAAc,CAAC;QAClC,SAAI,GAAQ,EAAE,CAAC;QAMb,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEF,kCAAQ,GAAR;IACA,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAE;YAC5B,OAAO,EAAE,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IAClC,CAAC;IAGD,sCAAY,GAAZ,UAAa,GAAQ;QAArB,iBAwCC;QAvCC,yBAAyB;QACzB,IAAM,MAAM,GAA+B,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACxD,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC5E,IAAM,MAAM,GAAe,IAAI,UAAU,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,GAAG,UAAC,CAAM;YACrB,mBAAmB;YACnB,IAAM,IAAI,GAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACrC,IAAM,EAAE,GAAkB,yCAAS,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YAE9D,sBAAsB;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,MAAM,GAAW,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAM,EAAE,GAAmB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC7C,KAAI,CAAC,IAAI,GAAG,0CAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAC1C;YACD,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAO;gBACvB,OAAO,CAAC,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,UAAU,GAAG;gBACf,YAAY,EAAC,SAAS;gBACtB,MAAM,EAAC,KAAI,CAAC,IAAI;aACjB;YACD,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxD,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,gCAAgC;oBACtC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC9C,KAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;oBAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,0CAAgB,GAAhB,UAAiB,SAAS;QACxB,IAAI,IAAI,GAAC,IAAI,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAC,KAAK,GAAC,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAE,IAAI,CAAC,OAAO,EAAE,GAAC,GAAG,GAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IACpE,CAAC;IA9FD;QADC,+DAAS,CAAC,SAAS,CAAC;kCACJ,wDAAU;4DAAC;IAFjB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,0HAAsC;;SAEvC,CAAC;yCA8BwB,+EAAa;YACZ,+DAAc;OA9B5B,eAAe,CAiG3B;IAAD,sBAAC;CAAA;AAjG2B;;;;;;;;;;;;ACV5B,+DAA+D,2K;;;;;;;;;;;ACA/D,ufAAuf,OAAO,KAAK,QAAQ,2rB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzd;AAC0B;AACnB;AAOzD;IAKE,2BACU,cAA6B,EAC7B,cAA8B;QAFxC,iBAOE;QANQ,mBAAc,GAAd,cAAc,CAAe;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QALxC,aAAQ,GAAQ,EAAE,CAAC;QACnB,gBAAW,GAAQ,EAAE,CAAC;QACtB,iBAAY,GAAQ,EAAE,CAAC;QAKrB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YAC9C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEF,oCAAQ,GAAR;IACA,CAAC;IAED,yCAAa,GAAb,UAAc,KAAK;QACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAE;YAC5C,OAAO,EAAE,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,cAAI;YAChE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,+BAA+B;gBACrC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;IAEA,CAAC;IAvCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gIAAwC;;SAEzC,CAAC;yCAOyB,iFAAc;YACb,+DAAc;OAP7B,iBAAiB,CAwC7B;IAAD,wBAAC;CAAA;AAxC6B;;;;;;;;;;;;ACT9B,+DAA+D,2J;;;;;;;;;;;ACA/D,kZAAkZ,uCAAuC,2BAA2B,YAAY,kCAAkC,iBAAiB,81DAA81D,6DAA6D,u7C;;;;;;;;;;;;;;;;;;;;;;;;;;ACA53E;AACgB;AACT;AAOzD;IAcE,uBACU,WAAwB,EACxB,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAfxC,SAAI,GAAG;YACL,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAKpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAED,2BAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG;YACV,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,aAAa,EAAE,EAAE;SAClB,CAAC;IACJ,CAAC;IACD,4BAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,gCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,mCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,cAAI;YACxC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAuCC;QAtCC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE;YAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,EAAE;YAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;gBAChD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;oBAChD,IAAI,KAAK,GAAU;wBACjB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,SAAS;wBAChB,IAAI,EAAE,0BAA0B;wBAChC,eAAe,EAAE,IAAI;qBACtB,CAAC;oBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aACJ;iBAAI;gBACH,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,oBAAoB;oBAC1B,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAChC;SACF;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI;YACnD,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,4BAA4B;gBAClC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAzHU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gHAAoC;;SAErC,CAAC;yCAgBuB,uEAAW;YACR,+DAAc;OAhB7B,aAAa,CA0HzB;IAAD,oBAAC;CAAA;AA1HyB;;;;;;;;;;;;ACT1B,+DAA+D,2K;;;;;;;;;;;ACA/D,uaAAua,gBAAgB,gCAAgC,uBAAuB,0jDAA0jD,mBAAmB,2FAA2F,+BAA+B,q1BAAq1B,iBAAiB,klBAAklB,eAAe,27B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/jH;AACM;AACS;AACV;AACT;AAOzD;IAgBE,gCAAgC;IAChC,4BACU,WAAwB,EACxB,gBAAkC,EAClC,WAAwB,EACxB,cAA8B;QAH9B,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAnBxC,cAAS,GAAG;YACV,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;SAClB,CAAC;QAGF,WAAM,GAAY,IAAI,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QAYpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;IACtD,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IACD,gCAAG,GAAH;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG;YACf,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;SAClB,CAAC;IACJ,CAAC;IAED,iCAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,qCAAQ,GAAR,UAAS,SAAS;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IACrD,CAAC;IAED,8CAAiB,GAAjB,UAAkB,WAAW;QAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,iBAAO;YAClC,WAAW,CAAC,OAAO,CAAC,YAAE;gBACpB,IAAI,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;oBACtB,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC;iBACpB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAkB,GAAlB,UAAmB,IAAI;QACrB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACrD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SACjB;aACI;YACH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;IACH,CAAC;IAED,6CAAgB,GAAhB;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAI;YAClD,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAI,GAAJ;QAAA,iBAuBC;QAtBC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,EAAE,EAAE;YACnC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC/D,IAAI,KAAK,GAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,+BAA+B;oBACrC,eAAe,EAAE,IAAI;iBACtB,CAAC;gBACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,kCAAkC;gBACxC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,gCAAgC;IAChC,2CAAc,GAAd,UAAe,KAAK;QAApB,iBAQC;QAPC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,+CAAkB,GAAlB,UAAmB,UAAU;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;YAC/C,OAAO,EAAE,CAAC,QAAQ,KAAK,UAAU,CAAC;QACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IACD,uCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;YAC7D,OAAO,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAA8B;IAC9B,mCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YACzE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,iCAAiC;gBACvC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAI;YAClE,IAAI,KAAK,GAAU;gBACjB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,iCAAiC;gBACvC,eAAe,EAAE,IAAI;aACtB,CAAC;YACF,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAhKU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+HAAyC;;SAE1C,CAAC;yCAmBuB,wEAAW;YACN,iFAAgB;YACrB,uEAAW;YACR,+DAAc;OArB7B,kBAAkB,CAiK9B;IAAD,yBAAC;CAAA;AAjK8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXU;AACwD;AACrC;AAG5D;IACE,mBAAoB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAElE,CAAC;IAED,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAC;YAClD,OAAO,IAAI,CAAC;SACb;aACI,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAC;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACb;aACI,IAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAC;YACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC;SACd;aACI,IAAG,KAAK,CAAC,GAAG,KAAK,GAAG,EACzB;YACE,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IArBU,SAAS;QADrB,gEAAU,EAAE;yCAEqB,yEAAW,EAAiB,sDAAM;OADvD,SAAS,CAsBrB;IAAD,gBAAC;CAAA;AAtBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLqB;AACgC;AAC5B;AAEH;AACb;AAK/B;IAME,qBACU,IAAgB,EAChB,GAAgB;QAF1B,iBAUC;QATS,SAAI,GAAJ,IAAI,CAAY;QAChB,QAAG,GAAH,GAAG,CAAa;QAExB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,SAAS,EAAE;YAC3D,IAAI,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,cAAI;gBACtC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,sCAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI,EAAE,WAAW;QACpC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,oEAAe,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAS,GAAT;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,8BAAQ,GAAR;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,oCAAc,GAAd,UAAe,SAAS;QACtB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,wCAAkB,GAAlB;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;SACjC,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,oCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,IAAI,GAAG;YACT,UAAU,EAAC,QAAQ;SACpB;QACD,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACxE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAGD,mCAAa,GAAb,UAAc,SAAS;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE;YACxD,OAAO,EAAE,CAAC,KAAK,KAAK,SAAS;QAC/B,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;YACpC,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,MAAM,CAAC;QACV,OAAO,KAAK,GAAG,CAAC;IAClB,CAAC;IAED,6BAAO,GAAP;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,qCAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE;YACxD,OAAO,EAAE,CAAC,KAAK,KAAK,KAAK;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,EAAE,GAAG,4CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACnC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7B,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE;YAC/B,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,gCAAU,GAAV,UAAW,KAAK;QACd,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,KAAK,KAAK,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YACnD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO,EAAE,CAAC;SACX;aAAM;YACL,OAAO,yBAAyB,GAAG,EAAE,CAAC;SACvC;IACH,CAAC;IAzHU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQgB,+DAAU;YACX,wDAAW;OARf,WAAW,CA2HvB;IAAD,kBAAC;CAAA;AA3HuB;;;;;;;;;;;;;;;;;;;;;;ACVmB;AAI3C;IAAA;IAmBA,CAAC;IAlBG,oCAAc,GAAd;QACI,OAAO;YACH,EAAC,MAAM,EAAC,WAAW,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,CAAC,EAAC;YACzD,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,CAAC,EAAC;YACpD,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,CAAC,EAAC;YACpD,EAAC,MAAM,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YAC1D,EAAC,MAAM,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YAC1D,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YACvD,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YACvD,EAAC,MAAM,EAAC,cAAc,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YAC/D,EAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,UAAU,EAAC,OAAO,EAAC,CAAC,EAAC;YAC5D,EAAC,MAAM,EAAC,QAAQ,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,UAAU,EAAC,OAAO,EAAC,CAAC,EAAC;YAC1D,EAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YAC3D,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YACvD,EAAC,MAAM,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;YACxD,EAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,CAAC,EAAC;SAC9D,CAAC;IACN,CAAC;IAlBQ,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,WAAW,CAmBvB;IAAD,kBAAC;CAAA;AAnBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJmB;AACgC;AACtB;AAKrD;IAEE,4BACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,8CAAiB,GAAjB,UAAkB,YAAY;QAC5B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QAC/D,GAAG,GAAG,GAAG,IAAG,KAAG,YAAY,CAAC,GAAK,EAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,uDAA0B,GAA1B,UAA2B,EAAE;QAC3B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC;IAxBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,kBAAkB,CAyB9B;IAAD,yBAAC;CAAA;AAzB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACgC;AACtB;AAKrD;IAEE,qBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,GAAG,GAAG,GAAG,IAAG,KAAG,IAAI,CAAC,GAAK,EAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IA1CU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,WAAW,CA2CvB;IAAD,kBAAC;CAAA;AA3CuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACgC;AACtB;AAKrD;IAEE,yBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,qCAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,GAAG,GAAG,GAAG,IAAG,KAAG,QAAQ,CAAC,GAAK,EAAC;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE;QACf,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAY,GAAZ;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,yCAAe,GAAf,UAAgB,UAAU;QACxB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAnDU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,eAAe,CAoD3B;IAAD,sBAAC;CAAA;AApD2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACgC;AACtB;AAKrD;IAEE,qBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,GAAG,GAAG,GAAG,IAAG,KAAG,IAAI,CAAC,GAAK,EAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,iCAAW,GAAX,UAAY,UAAU;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAnDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,WAAW,CAoDvB;IAAD,kBAAC;CAAA;AApDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACgC;AACtB;AAKrD;IAEE,wBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,mCAAU,GAAV,UAAW,OAAO;QAChB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC3D,GAAG,GAAG,GAAG,IAAG,KAAG,OAAO,CAAC,GAAK,EAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,sCAAa,GAAb,UAAc,EAAE;QACd,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IA1CU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,cAAc,CA2C1B;IAAD,qBAAC;CAAA;AA3C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACgC;AACtB;AAKrD;IAEE,6BACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6CAAe,GAAf,UAAgB,YAAY;QAC1B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,gDAAkB,GAAlB,UAAmB,YAAY;QAC7B,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAChE,GAAG,GAAG,GAAG,IAAG,KAAG,YAAY,CAAC,GAAK,EAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,gDAAkB,GAAlB,UAAmB,EAAE;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IA1CU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,mBAAmB,CA2C/B;IAAD,0BAAC;CAAA;AA3C+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACgC;AACtB;AAKrD;IAEE,qBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,GAAG,GAAG,GAAG,IAAG,KAAG,IAAI,CAAC,GAAK,EAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,iCAAW,GAAX,UAAY,UAAU;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAnDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,WAAW,CAoDvB;IAAD,kBAAC;CAAA;AApDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACgC;AACtB;AAKrD;IAEE,uBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,iCAAS,GAAT,UAAU,MAAM;QACd,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAM;QACjB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC1D,GAAG,GAAG,GAAG,IAAG,KAAG,MAAM,CAAC,GAAK,EAAC;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,qCAAa,GAAb;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IA1CU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,aAAa,CA2CzB;IAAD,oBAAC;CAAA;AA3CyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACgC;AACtB;AAKrD;IAEE,0BACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,uCAAY,GAAZ,UAAa,SAAS;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,0CAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC7D,GAAG,GAAG,GAAG,IAAG,KAAG,SAAS,CAAC,GAAK,EAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,2CAAgB,GAAhB,UAAiB,UAAU;QACzB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,0CAAe,GAAf,UAAgB,EAAE;QAChB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,2CAAgB,GAAhB;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,qCAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,GAAG,GAAG,GAAG,IAAG,KAAG,IAAI,CAAC,GAAK,EAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,qCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,sCAAW,GAAX,UAAY,EAAE;QACZ,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACvD,CAAC;IAjGU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,gBAAgB,CAkG5B;IAAD,uBAAC;CAAA;AAlG4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPc;AACgC;AACtB;AAKrD;IAEE,yBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,qCAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,GAAG,GAAG,GAAG,IAAG,KAAG,QAAQ,CAAC,GAAK,EAAC;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE;QACf,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IA1CU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,eAAe,CA2C3B;IAAD,sBAAC;CAAA;AA3C2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPe;AACgC;AACtB;AAKrD;IAEE,uBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,oCAAY,GAAZ,UAAa,UAAU;QACrB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,wCAAgB,GAAhB;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAvBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,aAAa,CAwBzB;IAAD,oBAAC;CAAA;AAxByB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACgC;AACtB;AAKrD;IAEE,wBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,oCAAW,GAAX;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC5D,GAAG,GAAG,GAAG,IAAG,KAAG,OAAO,CAAC,GAAK,EAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3D,CAAC;IAxBU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,cAAc,CAyB1B;IAAD,qBAAC;CAAA;AAzB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACgC;AACtB;AAKrD;IAEE,qBACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,GAAG,GAAG,GAAG,IAAG,KAAG,IAAI,CAAC,GAAK,EAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,8BAAQ,GAAR;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,iCAAW,GAAX,UAAY,UAAU;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAnDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,WAAW,CAoDvB;IAAD,kBAAC;CAAA;AApDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACgC;AACtB;AAKrD;IAEE,0BACU,IAAgB,EAChB,WAAwB;QADxB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,uCAAY,GAAZ,UAAa,SAAS;QACpB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,0CAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAC9D,GAAG,GAAG,GAAG,IAAG,KAAG,SAAS,CAAC,GAAK,EAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,0CAAe,GAAf,UAAgB,EAAE;QAChB,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;SAC7C,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvD,CAAC;IAED,wCAAa,GAAb;QACE,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClF,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IAC/C,CAAC;IAvCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;YACH,gEAAW;OAJvB,gBAAgB,CAwC5B;IAAD,uBAAC;CAAA;AAxC4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\r\\n<div class=\\\"container-fulid margin-top-50px\\\">\\r\\n    <toaster-container [toasterconfig]=\\\"config\\\"></toaster-container>\\r\\n  <div class=\\\"col-sm-2 padding-lr-0 hidden-xs\\\" *ngIf=\\\"authService.loggedIn()\\\">\\r\\n    <app-sidemenu></app-sidemenu>\\r\\n  </div>\\r\\n  <div [ngClass]=\\\"{'col-sm-10': authService.loggedIn(), 'col-sm-12': !authService.loggedIn()}\\\" id=\\\"contentContainer\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {AuthService} from './services/common/auth.service';\r\nimport { ToasterConfig } from 'angular2-toaster';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n  public config : ToasterConfig = new ToasterConfig({\r\n    positionClass: 'toast-bottom-right',\r\n    animation: 'fade'\r\n  });\r\n  constructor(\r\n    private authService:AuthService,\r\n  ) { }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\r\nimport { ToasterModule } from 'angular2-toaster';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/common/header/header.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UserComponent } from './components/user/user/user.component';\r\nimport { UsergroupComponent } from './components/user/usergroup/usergroup.component';\r\nimport { MachineComponent } from './components/machine/machine/machine.component';\r\nimport { SidemenuComponent } from './components/common/sidemenu/sidemenu.component';\r\nimport { MachinegroupComponent } from './components/machine/machinegroup/machinegroup.component';\r\nimport { AreaComponent } from './components/machine/area/area.component';\r\nimport { LineComponent } from './components/machine/line/line.component';\r\nimport { ReasonsComponent } from './components/machine/reasons/reasons.component';\r\nimport { LabelComponent } from './components/common/label/label.component';\r\nimport { TablelistComponent } from './components/common/tablelist/tablelist.component';\r\nimport { ImportComponent } from './components/settings/import/import.component';\r\nimport { SettingsComponent } from './components/settings/settings/settings.component';\r\nimport { TemplateComponent } from './components/machine/template/template.component';\r\nimport { StepsComponent } from './components/machine/steps/steps.component';\r\nimport { PartComponent } from './components/machine/part/part.component';\r\nimport { DocumentComponent } from './components/machine/document/document.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthService } from './services/common/auth.service';\r\nimport { UserService } from './services/user/user.service';\r\n\r\n\r\nconst appRoutes : Routes = [\r\n  {path : '', component: LoginComponent, canActivate:[AuthGuard] },\r\n  {path : 'home', component: HomeComponent, canActivate:[AuthGuard] },\r\n  {path : 'user', component: UserComponent, canActivate:[AuthGuard] },\r\n  {path : 'usergroup', component: UsergroupComponent, canActivate:[AuthGuard] },\r\n  {path : 'machine', component: MachineComponent, canActivate:[AuthGuard] },\r\n  {path : 'machinegroup', component: MachinegroupComponent, canActivate:[AuthGuard] },\r\n  {path : 'area', component: AreaComponent, canActivate:[AuthGuard] },\r\n  {path : 'line', component: LineComponent, canActivate:[AuthGuard] },\r\n  {path : 'reasons', component: ReasonsComponent, canActivate:[AuthGuard] },\r\n  {path : 'import', component: ImportComponent, canActivate:[AuthGuard] },\r\n  {path : 'settings', component: SettingsComponent, canActivate:[AuthGuard] },\r\n  {path : 'document', component: DocumentComponent, canActivate:[AuthGuard] },\r\n  {path : 'part', component: PartComponent, canActivate:[AuthGuard] },\r\n  {path : 'steps', component: StepsComponent, canActivate:[AuthGuard] },\r\n  {path : 'template', component: TemplateComponent, canActivate:[AuthGuard] },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UserComponent,\r\n    UsergroupComponent,\r\n    MachineComponent,\r\n    SidemenuComponent,\r\n    MachinegroupComponent,\r\n    AreaComponent,\r\n    LineComponent,\r\n    ReasonsComponent,\r\n    LabelComponent,\r\n    TablelistComponent,\r\n    ImportComponent,\r\n    SettingsComponent,\r\n    TemplateComponent,\r\n    StepsComponent,\r\n    PartComponent,\r\n    DocumentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgxQRCodeModule,\r\n    FileUploadModule,\r\n    BrowserAnimationsModule,\r\n    ModalModule.forRoot(),\r\n    ToasterModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes),\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".navbar-color{\\r\\n    background-color: #00adff;\\r\\n    border-color: #00adff;\\r\\n}\\r\\n.navbar-color .navbar-brand{\\r\\n    color: #fff;\\r\\n}\\r\\n.navbar-color li > a{\\r\\n    color: #fff;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.navbar-color .navbar-nav > li > a:hover, .navbar-color .navbar-nav > li > a:focus {\\r\\n    background-color: transparent;\\r\\n    color: #FFF;\\r\\n}\\r\\n.navbar-color .navbar-toggle .icon-bar{\\r\\n    background-color: #fff;\\r\\n}\\r\\n.img-logo{\\r\\n    padding: 0!important;\\r\\n}\\r\\n.img-logo img{\\r\\n    width: 60px;\\r\\n    height: 30px;\\r\\n    margin: 10px; \\r\\n}\\r\\n.dropdown-menu li a:focus,.dropdown-menu li a:hover{\\r\\n    background-color: transparent;\\r\\n    color: #FFF;\\r\\n}\\r\\n.nav-name{\\r\\n    float: right;\\r\\n    color: white;\\r\\n    padding: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsZUFBZTtBQUNuQjtBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxvQkFBb0I7QUFDeEI7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtBQUNoQjtBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLFdBQVc7QUFDZjtBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhci1jb2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGFkZmY7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMGFkZmY7XHJcbn1cclxuLm5hdmJhci1jb2xvciAubmF2YmFyLWJyYW5ke1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuLm5hdmJhci1jb2xvciBsaSA+IGF7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLm5hdmJhci1jb2xvciAubmF2YmFyLW5hdiA+IGxpID4gYTpob3ZlciwgLm5hdmJhci1jb2xvciAubmF2YmFyLW5hdiA+IGxpID4gYTpmb2N1cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjRkZGO1xyXG59XHJcbi5uYXZiYXItY29sb3IgLm5hdmJhci10b2dnbGUgLmljb24tYmFye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxufVxyXG4uaW1nLWxvZ297XHJcbiAgICBwYWRkaW5nOiAwIWltcG9ydGFudDtcclxufVxyXG5cclxuLmltZy1sb2dvIGltZ3tcclxuICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4OyBcclxufVxyXG5cclxuLmRyb3Bkb3duLW1lbnUgbGkgYTpmb2N1cywuZHJvcGRvd24tbWVudSBsaSBhOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogI0ZGRjtcclxufVxyXG5cclxuLm5hdi1uYW1le1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufSJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-color margin-bottom-0 hidden-sm hidden-xs navbar-fixed-top\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" *ngIf=\\\"authService.loggedIn()\\\" class=\\\"navbar-toggle collapsed\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n        [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand img-logo\\\" href=\\\"#\\\" (click)=\\\"updateMenu('home')\\\"><img src=\\\"assets/images/logo.png\\\"></a>\\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.hasPrevillage('home')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n          [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"updateMenu('home')\\\"><a>Home</a></li>\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.hasPrevillage('user')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n          [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"updateMenu('user')\\\"><a>User</a></li>\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.hasPrevillage('machine')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n          [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"updateMenu('machine')\\\"><a>Machine</a></li>\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.hasPrevillage('machine')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n          [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"updateMenu('settings')\\\"><a>Settings</a></li>\\r\\n      </ul>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn()\\\"><a href=\\\"#\\\">{{name}}</a></li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()\\\"><a (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!--/.nav-collapse -->\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<nav class=\\\"navbar navbar-color margin-bottom-0 hidden-md hidden-lg\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" *ngIf=\\\"authService.loggedIn()\\\" class=\\\"navbar-toggle collapsed\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"\\r\\n        [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbar\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n        <span class=\\\"icon-bar\\\"></span>\\r\\n      </button>\\r\\n      <span class=\\\"nav-name\\\">{{name}}</span>\\r\\n      <a class=\\\"navbar-brand img-logo\\\" href=\\\"#\\\"><img src=\\\"assets/images/logo.png\\\"></a>\\r\\n    </div>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.checkPrivilege('home')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n          [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/home']\\\">Home</a></li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">User\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li *ngIf=\\\"authService.loggedIn() && authService.checkPrivilege('user')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/user']\\\">User</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('usergroup')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/usergroup']\\\">User\\r\\n                group</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Machine\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('area')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/area']\\\">Area</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('line')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/line']\\\">Line</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('reasons')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/reasons']\\\">Reasons</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('machinegroup')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/machinegroup']\\\">Machine\\r\\n                group</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('machine')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/machine']\\\">Machine</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('document')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/document']\\\">Documents</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('part')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/part']\\\">Part</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('steps')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/steps']\\\">Step Group</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('template')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/template']\\\">Template</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n        <li class=\\\"dropdown\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Settings\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('settings')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/settings']\\\">Settings</a></li>\\r\\n            <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('import')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact : true }\\\" (click)=\\\"isCollapsed = !isCollapsed\\\"><a [routerLink]=\\\"['/import']\\\">Import</a></li>\\r\\n          </ul>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn()\\\"><a (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!--/.nav-collapse -->\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from '../../../services/common/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public isCollapsed = true;\r\n  public name:string;\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router\r\n  ) {\r\n    //this.updateMenu(\"home\");\r\n   }\r\n\r\n  ngOnInit() {\r\n  \r\n  }\r\n\r\n  onLogoutClick(){\r\n    this.authService.logout();\r\n    console.log(\"Logout\");\r\n    this.router.navigate(['/']);\r\n    this.isCollapsed = !this.isCollapsed\r\n    return false;\r\n  }\r\n  updateMenu(route){\r\n    var menu=this.authService.getSideMenuPage(route);\r\n    this.router.navigate([menu.name]);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL2xhYmVsL2xhYmVsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  label works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-label',\r\n  templateUrl: './label.component.html',\r\n  styleUrls: ['./label.component.css']\r\n})\r\nexport class LabelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".side-navbar{\\r\\n    padding: 0;\\r\\n    background-color: #333836;\\r\\n    color: #FFF;\\r\\n    position: fixed;\\r\\n    width: 16.66666667%;\\r\\n    height: 100%;\\r\\n}\\r\\n.side-navbar .list-group-item{\\r\\n    background-color: #d3d3d3!important;\\r\\n    margin-bottom: 5px;\\r\\n    border-radius: 0;\\r\\n    cursor: pointer;\\r\\n    color: black!important;\\r\\n    text-decoration: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jb21tb24vc2lkZW1lbnUvc2lkZW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVix5QkFBeUI7SUFDekIsV0FBVztJQUNYLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksbUNBQW1DO0lBQ25DLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9zaWRlbWVudS9zaWRlbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGUtbmF2YmFye1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM4MzY7XHJcbiAgICBjb2xvcjogI0ZGRjtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxNi42NjY2NjY2NyU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuLnNpZGUtbmF2YmFyIC5saXN0LWdyb3VwLWl0ZW17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDNkM2QzIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBjb2xvcjogYmxhY2shaW1wb3J0YW50O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"side-navbar\\\">\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"authService.isRouteDisplay('home')\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('home')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/home']\\\">Regular Maintenance</li>\\r\\n    </ul>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"authService.isRouteDisplay('machine')\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('machine')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/machine']\\\">Machine</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('machinegroup')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/machinegroup']\\\">Machine\\r\\n            group</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('area')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/area']\\\">Area</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('line')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/line']\\\">Line</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('reasons')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/reasons']\\\">Reasons</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('document')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/document']\\\">Documents</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('part')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/part']\\\">Part</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('steps')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/steps']\\\">Step Group</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('template')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/template']\\\">Template</li>\\r\\n    </ul>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"authService.isRouteDisplay('user')\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.checkPrivilege('user')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/user']\\\">User</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('usergroup')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/usergroup']\\\">User\\r\\n            group</li>\\r\\n    </ul>\\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"authService.isRouteDisplay('settings')\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn() && authService.checkPrivilege('settings')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/settings']\\\">Settings</li>\\r\\n        <li *ngIf=\\\"authService.loggedIn()  && authService.checkPrivilege('import')\\\" [routerLinkActive]=\\\"['active']\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact : true }\\\" class=\\\"list-group-item\\\" [routerLink]=\\\"['/import']\\\">Import</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { AuthService } from '../../../services/common/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidemenu',\r\n  templateUrl: './sidemenu.component.html',\r\n  styleUrls: ['./sidemenu.component.css']\r\n})\r\nexport class SidemenuComponent implements OnInit {\r\n  headerHeight: number;\r\n  windowHeight: number;\r\n  constructor(\r\n    private authService:AuthService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.resizeSideMenu();\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.resizeSideMenu();\r\n  }\r\n\r\n  resizeSideMenu(){\r\n    this.headerHeight = document.getElementsByClassName(\"navbar-color\")[0][\"offsetHeight\"];\r\n    this.windowHeight = window.innerHeight;\r\n    document.getElementsByClassName(\"side-navbar\")[0][\"style\"][\"height\"] = (this.windowHeight - this.headerHeight) + \"px\";\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL3RhYmxlbGlzdC90YWJsZWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\r\\n  tablelist works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tablelist',\r\n  templateUrl: './tablelist.component.html',\r\n  styleUrls: ['./tablelist.component.css']\r\n})\r\nexport class TablelistComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Regular Maintenance</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Choose Machine</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"rMaintenance.machineId\\\" name=\\\"machineId\\\" (change)=\\\"machineNameChange($event)\\\">\\r\\n        <option value=\\\"\\\">--Select Machine--</option>\\r\\n        <option *ngFor=\\\"let c of machines\\\" value=\\\"{{c._id}}\\\">{{c.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Schedule</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"rMaintenance.schedule\\\" name=\\\"schedule\\\">\\r\\n        <option value=\\\"\\\">--Select Schedule--</option>\\r\\n        <option value=\\\"week\\\">Every week</option>\\r\\n        <option value=\\\"month\\\">Every month</option>\\r\\n        <option value=\\\"year\\\">Every year</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\">\\r\\n    <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Save</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-2\\\">\\r\\n    <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/common/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { MachineService } from '../../services/machine/machine.service';\r\nimport { MaintenanceService } from '../../services/home/maintenance.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  machines: any;\r\n  rMaintenance = {\r\n    _id: \"0\",\r\n    machineName: \"\",\r\n    machineId:\"\",\r\n    schedule: \"\"\r\n  }\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private machineService: MachineService,\r\n    private maintenanceService: MaintenanceService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    var menu = this.authService.getSideMenuPage(\"home\");\r\n    this.router.navigate([menu.name]);\r\n    this.machineService.getMachines().subscribe(data => {\r\n      this.machines = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  update() {\r\n    this.rMaintenance.machineName = this.machines.filter(el => {\r\n      return el._id === this.rMaintenance.machineId;\r\n    })[0].name;\r\n    this.maintenanceService.updateMaintenance(this.rMaintenance).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Regular Maintenance updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    });\r\n  }\r\n\r\n  machineNameChange(event) {\r\n    \r\n    console.log(event.target.value);\r\n    this.maintenanceService.getRMaintenanceByMachineId(event.target.value).subscribe(data => {\r\n      console.log(data);\r\n      if (data[\"length\"] > 0) {\r\n        this.rMaintenance._id = data[0]._id;\r\n        this.rMaintenance.schedule = data[0].schedule;\r\n      }else{\r\n        this.rMaintenance._id = \"0\";\r\n        this.rMaintenance.schedule = \"\";\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"col-sm-4 col-sm-offset-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"page-header text-center\\\"><i class=\\\"fa fa-lock\\\" aria-hidden=\\\"true\\\"></i> Login</h2>\\r\\n      <form (submit)=\\\"onLoginSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Username</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4 col-sm-offset-4\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\" value=\\\"Login\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4 col-sm-offset-4  margin-top-20px\\\">\\r\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"openModal(template)\\\" value=\\\"Forgot Password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Forgot Password</h4>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Username</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fusername\\\" name=\\\"fusername\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMail()\\\">Send</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { AuthService } from '../../services/common/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String=\"\";\r\n  password: String=\"\";\r\n  modalRef: BsModalRef;\r\n  fusername: String=\"\";\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toasterService: ToasterService,\r\n    private modalService: BsModalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    \r\n    this.modalRef = this.modalService.show(template, { class: 'modal-md' });\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    if (this.username !== \"\" && this.password !== \"\") {\r\n      const user = {\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n\r\n      this.authService.authenticateUser(user).subscribe(data => {\r\n        console.log(data);\r\n        if (data[\"success\"]) {\r\n          this.authService.storeUserData(data[\"token\"], data[\"user\"], data[\"privillages\"]);\r\n          console.log(\"Logged In\");\r\n          this.router.navigate(['home']);\r\n        } else {\r\n          var toast: Toast = {\r\n            type: 'error',\r\n            title: 'Error',\r\n            body: 'Invalid Username/Password.',\r\n            showCloseButton: true\r\n          };\r\n          this.toasterService.pop(toast);\r\n          console.log(\"Login falied.\");\r\n          this.router.navigate(['/']);\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n\r\n  sendMail(){\r\n    this.authService.forgotPassword(this.fusername).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'An email has been sent. please check your email for temporary password.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.modalRef.hide();\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalRef.hide();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9hcmVhL2FyZWEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Area List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let area of areas\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(area)\\\">\\r\\n      <p>Name : {{area.name}}</p>\\r\\n      <p>Description: {{area.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Area</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">Area Details</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"area.name\\\" name=\\\"name\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Description</label>\\r\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"area.description\\\" name=\\\"description\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">\\r\\n        <h3 class=\\\"panel-title\\\">Add Lines</h3>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n          <form>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"search\\\" name=\\\"search\\\" (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n                    <div *ngIf=\\\"showResults\\\" id=\\\"txtSearch\\\" class=\\\"auto-complete-style\\\">\\r\\n                      <p *ngFor=\\\"let result of searchResults\\\" (click)=\\\"selectedItem(result)\\\" class=\\\"border-bottom\\\">{{result.name}}</p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"form-control btn btn-primary\\\" (click)=\\\"addLineToArea(search)\\\" value=\\\"Add\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n            <div>\\r\\n              <table class=\\\"table\\\">\\r\\n                <tr>\\r\\n                  <th>Line Name</th>\\r\\n                  <th>Delete</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let line of area.lines\\\">\\r\\n                    <td>{{line.name}}</td>\\r\\n                    <td><button type=\\\"button\\\" (click)=\\\"deleteLine(line)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AreaService } from '../../../services/machine/area.service';\r\nimport { LineService } from '../../../services/machine/line.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-area',\r\n  templateUrl: './area.component.html',\r\n  styleUrls: ['./area.component.css']\r\n})\r\nexport class AreaComponent implements OnInit {\r\n  area = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"lines\": []\r\n  };\r\n  areas: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  search: string;\r\n  searchResults: any;\r\n  showResults: boolean;\r\n  constructor(\r\n    private areaService: AreaService,\r\n    private lineService: LineService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getAreas();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.area = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"lines\": []\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(area) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.area = area;\r\n  }\r\n\r\n  onSearchChange(value) {\r\n    if (value.length > 2) {\r\n      this.lineService.getLineName(value).subscribe(data => {\r\n        this.showResults = true;\r\n        this.searchResults = data;\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectedItem(item) {\r\n    this.search = item.name;\r\n    this.showResults = false;\r\n  }\r\n\r\n  addLineToArea(searchTerm) {\r\n    let line = this.searchResults.filter(function (el) {\r\n      return el.name === searchTerm;\r\n    })[0];\r\n    this.search = \"\";\r\n    this.area.lines.push(line);\r\n  }\r\n\r\n  deleteLine(line) {\r\n    this.area.lines = this.area.lines.filter(function (el) {\r\n      return el._id !== line._id;\r\n    });\r\n  }\r\n  getAreas() {\r\n    this.areaService.getAreas().subscribe(data => {\r\n      this.areas = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.area.name !== \"\" && this.area.description !== \"\") {\r\n      this.areaService.addArea(this.area).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Area saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getAreas();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.areaService.deleteArea(this.area[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Area deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAreas();\r\n    });\r\n  }\r\n  update() {\r\n    this.areaService.updateArea(this.area).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Area updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAreas();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9kb2N1bWVudC9kb2N1bWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Document List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let pdocument of documents\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(pdocument)\\\">\\r\\n      <p>Name : {{pdocument.name}}</p>\\r\\n      <p>Description: {{pdocument.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Document</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"document.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"document.description\\\" name=\\\"description\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Upload file</label>\\r\\n          <div id=\\\"fileSelector\\\">\\r\\n            <input type=\\\"file\\\" name=\\\"fileUplaod\\\" id=\\\"fileUpload\\\" ng2FileSelect [uploader]=\\\"uploader\\\" (click)=\\\"fileUpload()\\\">\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!isFileUploadDone\\\">\\r\\n            <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\r\\n              <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"progress\\\">\\r\\n                  <div class=\\\"progress-bar bg-success\\\" [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"files.length > 0\\\">\\r\\n      <div class=\\\"col-sm-8\\\">\\r\\n        <div class=\\\"row uploadList\\\" *ngFor=\\\"let file of files\\\">\\r\\n          <div class=\\\"col-sm-4\\\">{{file}}</div>\\r\\n          <div class=\\\"col-sm-4 col-offset-sm-4\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"deleteFile(file)\\\">Delete</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileSelectDirective, FileUploader } from 'ng2-file-upload';\r\nimport { saveAs } from 'file-saver';\r\nimport { AuthService } from '../../../services/common/auth.service';\r\nimport { DocumentService } from '../../../services/machine/document.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-document',\r\n  templateUrl: './document.component.html',\r\n  styleUrls: ['./document.component.css']\r\n})\r\nexport class DocumentComponent implements OnInit {\r\n  uploader: FileUploader;\r\n  document = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"originalFileName\": \"\",\r\n    \"uploadFileName\": \"\"\r\n  };\r\n  files = [];\r\n  isFileUploadDone: boolean = false;\r\n  documents: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private documentService: DocumentService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.uploader = new FileUploader({ url: this.authService.prepEndpoint('document/upload') });\r\n    this.uploader.onBeforeUploadItem = (item) => {\r\n      item.withCredentials = false;\r\n    }\r\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n      this.isFileUploadDone = true;\r\n      let res = JSON.parse(response);\r\n      this.files.push(res.originalname);\r\n      this.document.uploadFileName = res.uploadName;\r\n      this.document.originalFileName = res.originalname;\r\n    }\r\n    this.getDocuments();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.document = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"originalFileName\": \"\",\r\n      \"uploadFileName\": \"\"\r\n    };\r\n    this.files = [];\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(document) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.document = document;\r\n    this.files = [];\r\n    if (document.originalFileName !== \"\" && document.uploadFileName != \"\") {\r\n      this.files.push(document.originalFileName);\r\n    }\r\n  }\r\n  fileUpload() {\r\n    this.uploader.queue.pop();\r\n    this.isFileUploadDone = false;\r\n  }\r\n  deleteFile(file) {\r\n    var index = this.files.indexOf(file);\r\n    if (index !== -1) {\r\n      this.files.splice(index, 1);\r\n    }\r\n    this.document.originalFileName = \"\";\r\n    this.document.uploadFileName = \"\";\r\n  }\r\n\r\n  getDocuments() {\r\n    this.documentService.getDocuments().subscribe(data => {\r\n      this.documents = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.document.name !== \"\" && this.document.description !== \"\") {\r\n      this.documentService.addDocument(this.document).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Document saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getDocuments();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.documentService.deleteDocument(this.document[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Document deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getDocuments();\r\n    });\r\n  }\r\n  update() {\r\n    this.documentService.updateDocument(this.document).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Document updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getDocuments();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9saW5lL2xpbmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Line List</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\" *ngFor=\\\"let line of lines\\\">\\r\\n      <div class=\\\"border-style\\\" (click)=\\\"populate(line)\\\">\\r\\n        <p>Name : {{line.name}}</p>\\r\\n        <p>Description: {{line.description}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isList\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <h2 class=\\\"pull-left\\\">Line</h2>\\r\\n        <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"line.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description</label>\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"line.description\\\" name=\\\"description\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LineService } from '../../../services/machine/line.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-line',\r\n  templateUrl: './line.component.html',\r\n  styleUrls: ['./line.component.css']\r\n})\r\nexport class LineComponent implements OnInit {\r\n\r\n  line = {\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n  };\r\n  lines: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private lineService: LineService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getLines();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.line = {\r\n      \"name\": \"\",\r\n      \"description\": \"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(line) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.line = line;\r\n  }\r\n\r\n  getLines() {\r\n    this.lineService.getLines().subscribe(data => {\r\n      this.lines = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.line.name !== \"\" && this.line.description !== \"\") {\r\n      this.lineService.addLine(this.line).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Line saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getLines();\r\n      });\r\n    }else{\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.lineService.deleteLine(this.line[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Line deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getLines();\r\n    });\r\n  }\r\n  update() {\r\n    this.lineService.updateLine(this.line).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Line updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getLines();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9tYWNoaW5lL21hY2hpbmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Machine List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let machine of machines\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(machine)\\\">\\r\\n      <p>Name : {{machine.name}}</p>\\r\\n      <p>Area: {{machine.area.name}}</p>\\r\\n      <p>Line: {{machine.line.name}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Machine</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"machine.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Machine group</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"machine.machinegroup\\\" name=\\\"machinegroup\\\">\\r\\n              <option value=\\\"\\\">--Select Machine Group--</option>\\r\\n              <option *ngFor=\\\"let machinegroup of machinegroupList\\\" value=\\\"{{machinegroup._id}}\\\">{{machinegroup.name}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Company Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"machine.company\\\" name=\\\"company\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Date Of Install</label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{ dateInputFormat: 'MM-DD-YYYY', containerClass: 'theme-red' }\\\"\\r\\n            bsDatepicker  [(ngModel)]=\\\"machine.dateOfInstall\\\" name=\\\"dateOfInstall\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Area</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"machine.area._id\\\" name=\\\"area\\\">\\r\\n            <option value=\\\"\\\">--Select Area--</option>\\r\\n            <option *ngFor=\\\"let area of areaList\\\" value=\\\"{{area._id}}\\\">{{area.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Line</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"machine.line._id\\\" name=\\\"line\\\">\\r\\n            <option value=\\\"\\\">--Select Line--</option>\\r\\n            <option *ngFor=\\\"let line of lineList\\\" value=\\\"{{line._id}}\\\">{{line.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Barcode</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"machine.barcode\\\" name=\\\"barcode\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Model</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"machine.model\\\" name=\\\"model\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\" data-toggle=\\\"modal\\\" data-target=\\\"#qrModal\\\" (click)=\\\"generateQR()\\\">Show QR</button>\\r\\n    </div>\\r\\n  </div>\\r\\n<!-- Button trigger modal -->\\r\\n\\r\\n  \\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"qrModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">QR Code for {{machine.name}}</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div *ngIf=\\\"machine.name!=='' && machine.area!=='' && machine.line!==''\\\" class=\\\"text-center\\\">\\r\\n            <ngx-qrcode qrc-element-type=\\\"img\\\" [qrc-value]=\\\"machine.qrCode\\\" id=\\\"print-section\\\"></ngx-qrcode>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"machine.name==='' && machine.area==='' && machine.line===''\\\" class=\\\"text-center\\\">\\r\\n              <h2>Please fill Machine Name, Area and Line</h2>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"  *ngIf=\\\"machine.name!=='' && machine.area!=='' && machine.line!==''\\\" (click)=\\\"print()\\\">Print</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MachineService } from '../../../services/machine/machine.service';\r\nimport { AreaService } from '../../../services/machine/area.service';\r\nimport { LineService } from '../../../services/machine/line.service';\r\nimport { MachinegroupService } from '../../../services/machine/machinegroup.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-machine',\r\n  templateUrl: './machine.component.html',\r\n  styleUrls: ['./machine.component.css']\r\n})\r\nexport class MachineComponent implements OnInit {\r\n\r\n  machine = {\r\n    \"name\": \"\",\r\n    \"machinegroup\": \"\",\r\n    \"company\": \"\",\r\n    \"model\": \"\",\r\n    \"dateOfInstall\": \"\",\r\n    \"qrCode\": \"\",\r\n    \"area\": {},\r\n    \"line\": {},\r\n    \"barcode\": \"\"\r\n  };\r\n  machines: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  areaList: any;\r\n  lineList: any;\r\n  machinegroupList: any;\r\n  constructor(\r\n    private machineService: MachineService,\r\n    private areaService: AreaService,\r\n    private lineService: LineService,\r\n    private machinegroupService: MachinegroupService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getMachines();\r\n    this.areaService.getAreas().subscribe(data => {\r\n      this.areaList = data;\r\n    });\r\n    this.lineService.getLines().subscribe(data => {\r\n      this.lineList = data;\r\n    });\r\n    this.machinegroupService.getMachineGroups().subscribe(data => {\r\n      this.machinegroupList = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.machine = {\r\n      \"name\": \"\",\r\n      \"machinegroup\": \"\",\r\n      \"company\": \"\",\r\n      \"model\": \"\",\r\n      \"dateOfInstall\": \"\",\r\n      \"qrCode\": \"\",\r\n      \"area\": {},\r\n      \"line\": {},\r\n      \"barcode\": \"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(machine) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.machine = machine;\r\n    this.machine.area = machine.area;\r\n    this.machine.line = machine.line;\r\n    this.machine.machinegroup = machine.machinegroup._id;\r\n  }\r\n\r\n  getMachines() {\r\n    this.machineService.getMachines().subscribe(data => {\r\n      this.machines = data;\r\n    });\r\n  }\r\n  generateQR() {\r\n    this.machine.qrCode = \"{ machineName :\" + this.machine.name + \",area:\" + this.machine.area[\"_id\"] + \",line:\" + this.machine.line[\"_id\"] + \"}\";\r\n  }\r\n  save() {\r\n    if (this.machine.name !== \"\" && this.machine.machinegroup !== \"\"\r\n      && this.machine.dateOfInstall !== \"\" && this.machine.area[\"_id\"] !== \"\" && this.machine.line[\"_id\"] !== \"\") {\r\n      this.machineService.addMachine(this.machine).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Machine saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getMachines();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.machineService.deleteMachine(this.machine[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Machine deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getMachines();\r\n    });\r\n  }\r\n  update() {\r\n    this.machineService.updateMachine(this.machine).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Machine updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getMachines();\r\n    });\r\n  }\r\n  print() {\r\n    let printContents, popupWin;\r\n    printContents = document.getElementById('print-section').innerHTML;\r\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\r\n    popupWin.document.open();\r\n    popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Print tab</title>\r\n          <style>\r\n          //........Customized style.......\r\n          </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`\r\n    );\r\n    popupWin.document.close();\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9tYWNoaW5lZ3JvdXAvbWFjaGluZWdyb3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Machine group List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let machinegroup of machinegroups\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(machinegroup)\\\">\\r\\n      <p>Name : {{machinegroup.name}}</p>\\r\\n      <p>Description: {{machinegroup.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Machine Group</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"machinegroup.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"machinegroup.description\\\" name=\\\"description\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MachinegroupService } from '../../../services/machine/machinegroup.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-machinegroup',\r\n  templateUrl: './machinegroup.component.html',\r\n  styleUrls: ['./machinegroup.component.css']\r\n})\r\nexport class MachinegroupComponent implements OnInit {\r\n\r\n  machinegroup = {\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n  };\r\n  machinegroups: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private machinegroupService: MachinegroupService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getAllMachineGroups();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.machinegroup = {\r\n      \"name\": \"\",\r\n      \"description\": \"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(machinegroup) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.machinegroup = machinegroup;\r\n  }\r\n\r\n  getAllMachineGroups() {\r\n    this.machinegroupService.getMachineGroups().subscribe(data => {\r\n      this.machinegroups = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.machinegroup.name !== \"\" && this.machinegroup.description !== \"\") {\r\n      this.machinegroupService.addMachineGroup(this.machinegroup).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Machine group saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getAllMachineGroups();\r\n      });\r\n    }else{\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.machinegroupService.deleteMachineGroup(this.machinegroup[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Machine group deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllMachineGroups();\r\n    });\r\n  }\r\n  update() {\r\n    this.machinegroupService.updateMachineGroup(this.machinegroup).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Machine group updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllMachineGroups();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9wYXJ0L3BhcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Part List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let part of parts\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(part)\\\">\\r\\n      <p>Name : {{part.name}}</p>\\r\\n      <p>Description: {{part.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Part</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"part.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"part.description\\\" name=\\\"description\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Serial part</label>\\r\\n          <div class=\\\"radio\\\">\\r\\n            <label><input type=\\\"radio\\\" value=\\\"yes\\\" name=\\\"isSerial\\\" [(ngModel)]=\\\"part.isSerial\\\"> Yes</label>\\r\\n          </div>\\r\\n          <div class=\\\"radio\\\">\\r\\n            <label><input type=\\\"radio\\\" value=\\\"no\\\" name=\\\"isSerial\\\" [(ngModel)]=\\\"part.isSerial\\\"> No</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Available Quantity</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"part.availableQuantity\\\" name=\\\"availableQuantity\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\" data-toggle=\\\"modal\\\" data-target=\\\"#qrModal\\\" (click)=\\\"generateQR()\\\">Show QR</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n    <!-- Modal -->\\r\\n    <div class=\\\"modal fade\\\" id=\\\"qrModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n              <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">QR Code for {{part.name}}</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <div *ngIf=\\\"part.name!==''\\\" class=\\\"text-center\\\">\\r\\n                <ngx-qrcode qrc-element-type=\\\"img\\\" [qrc-value]=\\\"part.qrCode\\\" id=\\\"print-section\\\"></ngx-qrcode>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"part.name===''\\\" class=\\\"text-center\\\">\\r\\n                  <h2>Please fill Part name</h2>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"  *ngIf=\\\"part.name!==''\\\" (click)=\\\"print()\\\">Print</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\nimport { PartService } from '../../../services/machine/part.service';\r\n\r\n@Component({\r\n  selector: 'app-part',\r\n  templateUrl: './part.component.html',\r\n  styleUrls: ['./part.component.css']\r\n})\r\nexport class PartComponent implements OnInit {\r\n  part = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"isSerial\":\"\",\r\n    \"availableQuantity\":\"\",\r\n    \"qrCode\":\"\"\r\n  };\r\n  parts: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private partService: PartService,\r\n    private toasterService: ToasterService\r\n  ) { \r\n    this.getParts();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.part = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"isSerial\":\"\",\r\n      \"availableQuantity\":\"\",\r\n      \"qrCode\":\"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(part) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.part = part;\r\n  }\r\n\r\n  getParts() {\r\n    this.partService.getParts().subscribe(data => {\r\n      this.parts = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.part.name !== \"\" && this.part.description !== \"\") {\r\n      this.partService.addPart(this.part).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Part saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getParts();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.partService.deletePart(this.part[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Part deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getParts();\r\n    });\r\n  }\r\n  update() {\r\n    this.partService.updatePart(this.part).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Part updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getParts();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n\r\n  generateQR() {\r\n    this.part.qrCode = \"{ partName :\" + this.part.name + \"}\";\r\n  }\r\n\r\n  print() {\r\n    let printContents, popupWin;\r\n    printContents = document.getElementById('print-section').innerHTML;\r\n    popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\r\n    popupWin.document.open();\r\n    popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Print tab</title>\r\n          <style>\r\n          //........Customized style.......\r\n          </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`\r\n    );\r\n    popupWin.document.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9yZWFzb25zL3JlYXNvbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Reasons List</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\" *ngFor=\\\"let reason of reasons\\\">\\r\\n      <div class=\\\"border-style\\\" (click)=\\\"populate(reason)\\\">\\r\\n        <p>Name : {{reason.name}}</p>\\r\\n        <p>Description: {{reason.description}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isList\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <h2 class=\\\"pull-left\\\">Reason</h2>\\r\\n        <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"reason.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description</label>\\r\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"reason.description\\\" name=\\\"description\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n          <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReasonService } from '../../../services/machine/reason.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-reasons',\r\n  templateUrl: './reasons.component.html',\r\n  styleUrls: ['./reasons.component.css']\r\n})\r\nexport class ReasonsComponent implements OnInit {\r\n\r\n  reason = {\r\n    \"name\": \"\",\r\n    \"description\": \"\"\r\n  };\r\n  reasons: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private reasonService: ReasonService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getAllReasons();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.reason = {\r\n      \"name\": \"\",\r\n      \"description\": \"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(reason) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.reason = reason;\r\n  }\r\n\r\n  getAllReasons() {\r\n    this.reasonService.getAllReasons().subscribe(data => {\r\n      this.reasons = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.reason.name !== \"\" && this.reason.description !== \"\") {\r\n      this.reasonService.addReason(this.reason).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Reason saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getAllReasons();\r\n      });\r\n    }else{\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.reasonService.deleteReason(this.reason[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Reason deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllReasons();\r\n    });\r\n  }\r\n  update() {\r\n    this.reasonService.updateReason(this.reason).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Reason updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllReasons();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS9zdGVwcy9zdGVwcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Step Group List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let stepgroup of stepgroups\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(stepgroup)\\\">\\r\\n      <p>Name : {{stepgroup.name}}</p>\\r\\n      <p>Description: {{stepgroup.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Step Group</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Step Group Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"stepgroup.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"stepgroup.description\\\" name=\\\"description\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\"  (click)=\\\"openModal(template, true, null)\\\">Add Step</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row margin-top-20px\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <tr>\\r\\n            <th>Step Name</th>\\r\\n            <th>Edit</th>\\r\\n            <th>Delete</th>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let step of stepgroup.steps\\\">\\r\\n            <td>{{step.name}}</td>\\r\\n            <td><button type=\\\"button\\\" (click)=\\\"openModal(template, false, step)\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n            <td><button type=\\\"button\\\" (click)=\\\"deleteStep(step)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <ng-template #template>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Add Step to Step group</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Step Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step.name\\\" name=\\\"name\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Description</label>\\r\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"step.description\\\" name=\\\"description\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <div>\\r\\n            <h4>Add Document</h4>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"documentsearch\\\" name=\\\"documentsearch\\\" (input)=\\\"onSearchChange($event.target.value, 'document')\\\">\\r\\n                <div *ngIf=\\\"documentshowResults\\\" id=\\\"txtSearch\\\" class=\\\"auto-complete-style\\\">\\r\\n                  <p *ngFor=\\\"let result of documentsearchResults\\\" (click)=\\\"selectedItem(result,'document')\\\" class=\\\"border-bottom\\\">{{result.name}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"form-control btn btn-primary\\\" (click)=\\\"addDocumentToStep(documentsearch)\\\" value=\\\"Add\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <table class=\\\"table\\\">\\r\\n              <tr>\\r\\n                <th>Document Name</th>\\r\\n                <th>Delete</th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let document of step.documents\\\">\\r\\n                <td>{{document.name}}</td>\\r\\n                <td><button type=\\\"button\\\" (click)=\\\"deleteDocument(document)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n            <div>\\r\\n              <h4>Add Part</h4>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"partsearch\\\" name=\\\"partsearch\\\" (input)=\\\"onSearchChange($event.target.value,'step')\\\">\\r\\n                  <div *ngIf=\\\"partshowResults\\\" id=\\\"txtSearch\\\" class=\\\"auto-complete-style\\\">\\r\\n                    <p *ngFor=\\\"let result of partsearchResults\\\" (click)=\\\"selectedItem(result,'step')\\\" class=\\\"border-bottom\\\">{{result.name}}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"button\\\" class=\\\"form-control btn btn-primary\\\" (click)=\\\"addPartToStep(partsearch)\\\" value=\\\"Add\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div>\\r\\n              <table class=\\\"table\\\">\\r\\n                <tr>\\r\\n                  <th>Part Name</th>\\r\\n                  <th>Delete</th>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let part of step.parts\\\">\\r\\n                  <td>{{part.name}}</td>\\r\\n                  <td><button type=\\\"button\\\" (click)=\\\"deletePart(part)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addStepToStepGroup()\\\" *ngIf=\\\"(step._id === undefined)\\\">Add Step</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateStepToStepGroup()\\\" *ngIf=\\\"!(step._id === undefined)\\\">Update Step</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { StepgroupService } from '../../../services/machine/stepgroup.service';\r\nimport { DocumentService } from '../../../services/machine/document.service';\r\nimport { PartService } from '../../../services/machine/part.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\n\r\n@Component({\r\n  selector: 'app-steps',\r\n  templateUrl: './steps.component.html',\r\n  styleUrls: ['./steps.component.css']\r\n})\r\nexport class StepsComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  stepgroup = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"steps\": []\r\n  };\r\n  stepgroups: any;\r\n  steps: any;\r\n  step = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"parts\": [],\r\n    \"documents\": []\r\n  };\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n\r\n  /*Auto complete variables start */\r\n  documentsearch: string;\r\n  documentsearchResults: any;\r\n  documentshowResults: boolean;\r\n  partsearch: string;\r\n  partsearchResults: any;\r\n  partshowResults: boolean;\r\n  /*Auto complete variables end */\r\n  constructor(\r\n    private stepgroupService: StepgroupService,\r\n    private documentService: DocumentService,\r\n    private partService: PartService,\r\n    private toasterService: ToasterService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    this.getStepGroups();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, isNew, step) {\r\n    if (isNew) {\r\n      this.step = {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"parts\": [],\r\n        \"documents\": []\r\n      };\r\n    }else{\r\n      this.stepgroupService.getStepById(step._id).subscribe(data => {\r\n        this.step = data[\"data\"];\r\n      });\r\n    }\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-md' });\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.stepgroup = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"steps\": []\r\n    };\r\n    this.step = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"parts\": [],\r\n      \"documents\": []\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(stepgroup) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.stepgroup = stepgroup;\r\n  }\r\n\r\n  getStepGroups() {\r\n    this.stepgroupService.getAllStepgroups().subscribe(data => {\r\n      this.stepgroups = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.stepgroup.name !== \"\" && this.stepgroup.description !== \"\") {\r\n      this.stepgroupService.addStepgroup(this.stepgroup).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Stepgroup saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getStepGroups();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.stepgroupService.deleteStepgroup(this.stepgroup[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Stepgroup deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getStepGroups();\r\n    });\r\n  }\r\n  update() {\r\n    this.stepgroupService.updateStepgroup(this.stepgroup).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Stepgroup updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getStepGroups();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n\r\n  /*Auto complete methods start */\r\n  onSearchChange(value, modulename) {\r\n    if (value.length > 2 && modulename === \"document\") {\r\n      this.documentService.getDocumentName(value).subscribe(data => {\r\n        this.documentshowResults = true;\r\n        this.documentsearchResults = data;\r\n        console.log(data);\r\n      });\r\n    } else if (value.length > 2) {\r\n      this.partService.getPartName(value).subscribe(data => {\r\n        this.partshowResults = true;\r\n        this.partsearchResults = data;\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectedItem(item, modulename) {\r\n    if (modulename === \"document\") {\r\n      this.documentsearch = item.name;\r\n      this.documentshowResults = false;\r\n    } else {\r\n      this.partsearch = item.name;\r\n      this.partshowResults = false;\r\n    }\r\n  }\r\n\r\n  addDocumentToStep(searchTerm) {\r\n    let document = this.documentsearchResults.filter(function (el) {\r\n      return el.name === searchTerm;\r\n    })[0];\r\n    this.documentsearch = \"\";\r\n    this.step.documents.push(document);\r\n  }\r\n\r\n  addPartToStep(searchTerm) {\r\n    let part = this.partsearchResults.filter(function (el) {\r\n      return el.name === searchTerm;\r\n    })[0];\r\n    this.partsearch = \"\";\r\n    this.step.parts.push(part);\r\n  }\r\n\r\n  deleteDocument(document) {\r\n    this.step.documents = this.step.documents.filter(function (el) {\r\n      return el._id !== document._id;\r\n    });\r\n  }\r\n\r\n  deletePart(part) {\r\n    this.step.parts = this.step.parts.filter(function (el) {\r\n      return el._id !== part._id;\r\n    });\r\n  }\r\n\r\n  addStepToStepGroup() {\r\n    this.stepgroupService.addStep(this.step).subscribe(data => {\r\n      this.stepgroup.steps.push(data[\"data\"]);\r\n      this.modalRef.hide();\r\n    });\r\n  }\r\n  updateStepToStepGroup(){\r\n    this.stepgroupService.updateStep(this.step).subscribe(data => {\r\n      let stepid =this.stepgroup.steps.filter(el=>{\r\n        return (el._id === this.step[\"_id\"]);\r\n      })[0];\r\n      stepid = this.step;\r\n      this.modalRef.hide();\r\n    });\r\n  }\r\n  closeModal() {\r\n    this.modalRef.hide();\r\n  }\r\n  deleteStep(step){\r\n    this.stepgroupService.deleteStep(step[\"_id\"]).subscribe(data => {\r\n      this.stepgroup.steps = this.stepgroup.steps.filter(function (el) {\r\n        return el._id !== step._id;\r\n      });\r\n    });\r\n  }\r\n  /*Auto complete methods end */\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFjaGluZS90ZW1wbGF0ZS90ZW1wbGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Template List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let template of templates\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(template)\\\">\\r\\n      <p>Name : {{template.name}}</p>\\r\\n      <p>Description: {{template.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">Template</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"template.name\\\" name=\\\"name\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Equipent</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"template.machine\\\" name=\\\"machine\\\">\\r\\n            <option value=\\\"\\\">--Select Machine--</option>\\r\\n            <option *ngFor=\\\"let equipent of equipentList\\\" value=\\\"{{equipent._id}}\\\">{{equipent.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Reason</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"template.reason\\\" name=\\\"reason\\\">\\r\\n            <option value=\\\"\\\">--Select Reason--</option>\\r\\n            <option *ngFor=\\\"let reason of reasonList\\\" value=\\\"{{reason._id}}\\\">{{reason.name}}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Description</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]=\\\"template.description\\\" name=\\\"description\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div>\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Add Step Group</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"search\\\" name=\\\"search\\\" (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n                <div *ngIf=\\\"showResults\\\" id=\\\"txtSearch\\\" class=\\\"auto-complete-style\\\">\\r\\n                  <p *ngFor=\\\"let result of searchResults\\\" (click)=\\\"selectedItem(result)\\\" class=\\\"border-bottom\\\">{{result.name}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"form-control btn btn-primary\\\" (click)=\\\"addStepGrpToTemplate(search)\\\" value=\\\"Add\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <table class=\\\"table\\\">\\r\\n              <tr>\\r\\n                <th>Step Group Name</th>\\r\\n                <th>Delete</th>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let step of template.stepgroups\\\">\\r\\n                <td>{{step.name}}</td>\\r\\n                <td><button type=\\\"button\\\" (click)=\\\"deleteStepGrp(step)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MachineService } from '../../../services/machine/machine.service';\r\nimport { ReasonService } from '../../../services/machine/reason.service';\r\nimport { TemplateService } from '../../../services/machine/template.service';\r\nimport { StepgroupService } from '../../../services/machine/stepgroup.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-template',\r\n  templateUrl: './template.component.html',\r\n  styleUrls: ['./template.component.css']\r\n})\r\nexport class TemplateComponent implements OnInit {\r\n  template = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"reason\": \"\",\r\n    \"machine\": \"\",\r\n    \"stepgroups\":[]\r\n  };\r\n  documents: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  equipentList: any;\r\n  reasonList: any;\r\n  templates:any;\r\n\r\n  /*Auto complete variables start */\r\n  search: string;\r\n  searchResults: any;\r\n  showResults: boolean;\r\n  /*Auto complete variables end */\r\n\r\n  constructor(\r\n    private machineService: MachineService,\r\n    private reasonService: ReasonService,\r\n    private templateService:TemplateService,\r\n    private stepgroupService:StepgroupService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.machineService.getMachines().subscribe(data => {\r\n      this.equipentList = data;\r\n    });\r\n    this.reasonService.getAllReasons().subscribe(data => {\r\n      this.reasonList = data;\r\n    });\r\n    this.getTemplates();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.template = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"reason\": \"\",\r\n      \"machine\": \"\",\r\n      \"stepgroups\":[]\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(template) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.template = template;\r\n  }\r\n\r\n  getTemplates() {\r\n    this.templateService.getAllTemplates().subscribe(data => {\r\n      this.templates = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.template.name !== \"\" && this.template.description !== \"\") {\r\n      this.templateService.addTemplate(this.template).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Template saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getTemplates();\r\n      });\r\n    }else{\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.templateService.deleteTemplate(this.template[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Template deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getTemplates();\r\n    });\r\n  }\r\n  update() {\r\n    this.templateService.updateTemplate(this.template).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Template updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getTemplates();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n\r\n   /*Auto complete methods start */\r\n   onSearchChange(value) {\r\n    if (value.length > 2) {\r\n      this.stepgroupService.getStepGroupName(value).subscribe(data => {\r\n        this.showResults = true;\r\n        this.searchResults = data;\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectedItem(item) {\r\n    this.search = item.name;\r\n    this.showResults = false;\r\n  }\r\n\r\n  addStepGrpToTemplate(searchTerm) {\r\n    let stepgroup = this.searchResults.filter(function (el) {\r\n      return el.name === searchTerm;\r\n    })[0];\r\n    this.search = \"\";\r\n    this.template.stepgroups.push(stepgroup);\r\n  }\r\n  deleteStepGrp(stepgroup) {\r\n    this.template.stepgroups = this.template.stepgroups.filter(function (el) {\r\n      return el._id !== stepgroup._id;\r\n    });\r\n  }\r\n  /*Auto complete methods end */\r\n}\r\n","module.exports = \".font-size-20px{\\r\\n    font-size: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9pbXBvcnQvaW1wb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5ncy9pbXBvcnQvaW1wb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9udC1zaXplLTIwcHh7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <h2 class=\\\"pull-left\\\">Import</h2>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Choose Module</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"module\\\" name=\\\"module\\\" (change)=\\\"modulechange($event)\\\">\\r\\n                <option value=\\\"\\\">--Select Module--</option>\\r\\n                <option *ngFor=\\\"let m of moduleList\\\" value=\\\"{{m.value}}\\\">{{m.key}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"module!==''\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <div class=\\\"pull-left\\\">\\r\\n                        <label class=\\\"font-size-20px\\\">{{sample.moduleName}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"pull-right\\\">\\r\\n                        <a href=\\\"{{sample.url}}\\\" class=\\\"btn btn-primary\\\">Download Sample Excel</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"module!==''\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Upload file</label>\\r\\n            <input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" multiple=\\\"false\\\" #txtFile/>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <h2>Import History</h2>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"panel panel-default\\\" *ngFor=\\\"let importH of importHistory\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <p>Module Name : {{importH.moduleName}}</p>\\r\\n                    <p>Date: {{importH.date}}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef  } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport { ImportService } from '../../../services/settings/import.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-import',\r\n  templateUrl: './import.component.html',\r\n  styleUrls: ['./import.component.css']\r\n})\r\nexport class ImportComponent implements OnInit {\r\n  @ViewChild('txtFile')\r\n  myInputVariable: ElementRef;\r\n  moduleList = [\r\n    {\r\n      \"value\": \"machine\",\r\n      \"key\": \"Machine\"\r\n    }\r\n  ];\r\n  module: string = \"\";\r\n  sample = {\r\n    \"moduleName\": \"\",\r\n    \"url\": \"\"\r\n  };\r\n  modules: any = [\r\n    {\r\n      name: \"machine\",\r\n      data: {\r\n        \"moduleName\": \"Machine\",\r\n        \"url\": \"https://fms-2018.herokuapp.com/import/download\"\r\n      }\r\n    }\r\n  ];\r\n  importHistory:any;\r\n  wopts: XLSX.WritingOptions = { bookType: 'xlsx', type: 'array' };\r\n  fileName: string = 'SheetJS.xlsx';\r\n  data: any = [];\r\n\r\n  constructor(\r\n   private importService: ImportService,\r\n   private toasterService: ToasterService\r\n  ) {\r\n    this.importService.getImportHistory().subscribe(data=>{\r\n      console.log(data);\r\n      this.importHistory = data;\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  modulechange(event) {\r\n    console.log(event.target.value);\r\n    var m = this.modules.filter(el => {\r\n      return el.name === event.target.value;\r\n    });\r\n    this.sample.moduleName = m[0].data.moduleName;\r\n    this.sample.url = m[0].data.url;\r\n  }\r\n\r\n\r\n  onFileChange(evt: any) {\r\n    /* wire up file reader */\r\n    const target: DataTransfer = <DataTransfer>(evt.target);\r\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\r\n    const reader: FileReader = new FileReader();\r\n    reader.onload = (e: any) => {\r\n      /* read workbook */\r\n      const bstr: string = e.target.result;\r\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\r\n\r\n      /* grab first sheet */\r\n      for (let i = 0; i < wb.SheetNames.length; i++) {\r\n        const wsname: string = wb.SheetNames[i];\r\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\r\n        this.data = XLSX.utils.sheet_to_json(ws);\r\n      }\r\n      this.data.forEach(element => {\r\n        element.dateOfInstall = this.convertExcelDate(element.dateOfInstall);\r\n      });\r\n      console.log(this.data);\r\n      var importdata = {\r\n        \"moduleName\":\"machine\",\r\n        \"data\":this.data\r\n      }\r\n      this.importService.createImport(importdata).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Machine imported successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.myInputVariable.nativeElement.value = \"\";\r\n        this.importService.getImportHistory().subscribe(data=>{\r\n          console.log(data);\r\n          this.importHistory = data;\r\n        });\r\n      });\r\n    };\r\n    reader.readAsBinaryString(target.files[0]);\r\n  }\r\n\r\n  convertExcelDate(excelDate) {\r\n    var date=new Date((excelDate - (25567 + 2))*86400*1000);\r\n    return date.getMonth()+\"/\"+ date.getDate()+\"/\"+date.getFullYear();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">Settings</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Choose Category</label>\\r\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"category\\\" name=\\\"category\\\" (change)=\\\"settingchange($event)\\\">\\r\\n        <option value=\\\"\\\">--Select Category--</option>\\r\\n        <option *ngFor=\\\"let c of categoryList\\\" value=\\\"{{c._id}}\\\">{{c.name}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"category!==''\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Value</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settingValue\\\" name=\\\"settingValue\\\"/>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" *ngIf=\\\"category!==''\\\">\\r\\n  <div class=\\\"col-sm-2\\\">\\r\\n    <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-2\\\">\\r\\n    <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SettingService } from '../../../services/settings/setting.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  categoryList:any;\r\n  category:string=\"\";\r\n  settingData:string=\"\";\r\n  settingValue:string=\"\";\r\n  constructor(\r\n    private settingService:SettingService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.settingService.getSettings().subscribe(data=>{\r\n      this.categoryList = data;\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  settingchange(event) {\r\n    console.log(event.target.value);\r\n    this.settingData = this.categoryList.filter(el => {\r\n      return el._id === event.target.value;\r\n    })[0];\r\n    this.settingValue = this.settingData[\"value\"];\r\n  }\r\n\r\n  save(){\r\n    this.settingData[\"value\"] = this.settingValue;\r\n    this.settingService.updateSetting(this.settingData).subscribe(data=>{\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Setting updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    });\r\n  }\r\n  cancel(){\r\n   \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyL3VzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">User List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let user of users\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(user)\\\">\\r\\n      <p>Name : {{user.firstName + \\\" \\\" +user.lastName}}</p>\\r\\n      <p>Email : {{user.email}}</p>\\r\\n      <p>Date of Join : {{user.dateOfJoin}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">User</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>First Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Last Name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Email</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Phone</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Username</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Date of Join</label>\\r\\n          <input type=\\\"text\\\" placeholder=\\\"Datepicker\\\" class=\\\"form-control\\\" [bsConfig]=\\\"{ dateInputFormat: 'MM-DD-YYYY', containerClass: 'theme-red' }\\\"\\r\\n            bsDatepicker [(ngModel)]=\\\"user.dateOfJoin\\\" name=\\\"dateOfJoin\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Confirm Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.cnfpassword\\\" name=\\\"cnfpassword\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n        <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../../services/user/user.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  user = {\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"email\": \"\",\r\n    \"phone\": \"\",\r\n    \"username\": \"\",\r\n    \"password\": \"\",\r\n    \"dateOfJoin\": \"\",\r\n    \"cnfpassword\": \"\"\r\n  };\r\n  users: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  constructor(\r\n    private userService: UserService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getAllUsers();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.user = {\r\n      \"firstName\": \"\",\r\n      \"lastName\": \"\",\r\n      \"email\": \"\",\r\n      \"phone\": \"\",\r\n      \"username\": \"\",\r\n      \"password\": \"\",\r\n      \"dateOfJoin\": \"\",\r\n      \"cnfpassword\": \"\"\r\n    };\r\n  }\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(user) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.user = user;\r\n  }\r\n\r\n  getAllUsers() {\r\n    this.userService.getUsers().subscribe(data => {\r\n      this.users = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.user.firstName !== \"\" &&\r\n      this.user.lastName !== \"\" &&\r\n      this.user.email !== \"\" &&\r\n      this.user.phone !== \"\" &&\r\n      this.user.username !== \"\" &&\r\n      this.user.password !== \"\" &&\r\n      this.user.dateOfJoin !== \"\" &&\r\n      this.user.cnfpassword !== \"\") {\r\n      if (this.user.password === this.user.cnfpassword) {\r\n        this.userService.addUser(this.user).subscribe(data => {\r\n          var toast: Toast = {\r\n            type: 'success',\r\n            title: 'Success',\r\n            body: 'User saved successfully.',\r\n            showCloseButton: true\r\n          };\r\n          this.toasterService.pop(toast);\r\n          this.isList = true;\r\n          this.getAllUsers();\r\n        });\r\n      }else{\r\n        var toast: Toast = {\r\n          type: 'error',\r\n          title: 'Error',\r\n          body: 'Password mismatch.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n      }\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  delete() {\r\n    this.userService.deleteUser(this.user[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'User deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllUsers();\r\n    });\r\n  }\r\n  update() {\r\n    this.userService.updateUser(this.user).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'User updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllUsers();\r\n    });\r\n  }\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyZ3JvdXAvdXNlcmdyb3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"isList\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <h2 class=\\\"pull-left\\\">User group List</h2>\\r\\n    <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"new()\\\">New</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3\\\" *ngFor=\\\"let usergroup of usergroups\\\">\\r\\n    <div class=\\\"border-style\\\" (click)=\\\"populate(usergroup)\\\">\\r\\n      <p>Name : {{usergroup.name}}</p>\\r\\n      <p>Description: {{usergroup.description}}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!isList\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <h2 class=\\\"pull-left\\\">User group</h2>\\r\\n      <button class=\\\"btn btn-primary pull-right margin-top-20px\\\" type=\\\"button\\\" (click)=\\\"back()\\\">Back to List</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">User group Details</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Group Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usergroup.name\\\" name=\\\"name\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usergroup.description\\\" name=\\\"description\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">Select Privillages</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <th>Privillage Name</th>\\r\\n          <th>Select</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let privillage of privillagesList\\\">\\r\\n          <td>\\r\\n            {{ privillage.name }}\\r\\n          </td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\"  [ngClass]=\\\"{'btn-success': privillage.set }\\\" (click)=\\\"privillageSelected(privillage)\\\" ><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">Add Users</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"search\\\" name=\\\"search\\\" (input)=\\\"onSearchChange($event.target.value)\\\">\\r\\n              <div *ngIf=\\\"showResults\\\" id=\\\"txtSearch\\\" class=\\\"auto-complete-style\\\">\\r\\n                  <p *ngFor=\\\"let result of searchResults\\\" (click)=\\\"selectedItem(result)\\\" class=\\\"border-bottom\\\">{{result.username}}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-2\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"button\\\" class=\\\"form-control btn btn-primary\\\" (click)=\\\"addUserToUserGroup(search)\\\" value=\\\"Add\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <div>\\r\\n        <table class=\\\"table\\\">\\r\\n          <tr>\\r\\n            <th>Username</th>\\r\\n            <th>Delete</th>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let user of usergroup.users\\\">\\r\\n              <td>{{user.username}}</td>\\r\\n              <td><button type=\\\"button\\\" (click)=\\\"deleteUser(user)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button></td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"update()\\\">Update</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"!isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"delete()\\\">Delete</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\" *ngIf=\\\"isNew\\\">\\r\\n      <button class=\\\"btn btn-primary form-control\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Privillages } from '../../../services/common/privillages';\r\nimport { UsergroupService } from '../../../services/user/usergroup.service';\r\nimport { UserService } from '../../../services/user/user.service';\r\nimport { ToasterService, Toast } from 'angular2-toaster';\r\n\r\n@Component({\r\n  selector: 'app-usergroup',\r\n  templateUrl: './usergroup.component.html',\r\n  styleUrls: ['./usergroup.component.css']\r\n})\r\nexport class UsergroupComponent implements OnInit {\r\n\r\n  usergroup = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"users\": [],\r\n    \"privillages\": []\r\n  };\r\n  privillagesList: any;\r\n  usergroups: any;\r\n  isList: boolean = true;\r\n  isNew: boolean = true;\r\n  /*Auto complete variables start */\r\n  search: string;\r\n  searchResults: any;\r\n  showResults: boolean;\r\n  /*Auto complete variables end */\r\n  constructor(\r\n    private privillages: Privillages,\r\n    private usergroupService: UsergroupService,\r\n    private userService: UserService,\r\n    private toasterService: ToasterService\r\n  ) {\r\n    this.getAllUserGroups();\r\n    this.privillagesList = privillages.getPrivillages();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  new() {\r\n    this.isList = false;\r\n    this.isNew = true;\r\n    this.usergroup = {\r\n      \"name\": \"\",\r\n      \"description\": \"\",\r\n      \"users\": [],\r\n      \"privillages\": []\r\n    };\r\n  }\r\n\r\n  back() {\r\n    this.isList = true;\r\n  }\r\n  populate(usergroup) {\r\n    this.isList = false;\r\n    this.isNew = false;\r\n    this.usergroup = usergroup;\r\n    this.updatePrivillages(this.usergroup.privillages);\r\n  }\r\n\r\n  updatePrivillages(privillages) {\r\n    this.privillagesList.forEach(element => {\r\n      privillages.forEach(el => {\r\n        if (el == element.name) {\r\n          element.set = true;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  privillageSelected(priv) {\r\n    if (this.usergroup.privillages.indexOf(priv.name) < 0) {\r\n      this.usergroup.privillages.push(priv.name);\r\n      priv.set = true;\r\n    }\r\n    else {\r\n      this.usergroup.privillages.splice(this.usergroup.privillages.indexOf(priv.name), 1);\r\n      priv.set = false;\r\n    }\r\n  }\r\n\r\n  getAllUserGroups() {\r\n    this.usergroupService.getUserGroups().subscribe(data => {\r\n      this.usergroups = data;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.usergroup.name !== \"\" &&\r\n      this.usergroup.description !== \"\") {\r\n      this.usergroupService.addUserGroup(this.usergroup).subscribe(data => {\r\n        var toast: Toast = {\r\n          type: 'success',\r\n          title: 'Success',\r\n          body: 'Usergroup saved successfully.',\r\n          showCloseButton: true\r\n        };\r\n        this.toasterService.pop(toast);\r\n        this.isList = true;\r\n        this.getAllUserGroups();\r\n      });\r\n    } else {\r\n      var toast: Toast = {\r\n        type: 'error',\r\n        title: 'Error',\r\n        body: 'Please fill the all the details.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n    }\r\n  }\r\n  /*Auto complete methods start */\r\n  onSearchChange(value) {\r\n    if (value.length > 2) {\r\n      this.userService.getUserName(value).subscribe(data => {\r\n        this.showResults = true;\r\n        this.searchResults = data;\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectedItem(item) {\r\n    this.search = item.username;\r\n    this.showResults = false;\r\n  }\r\n\r\n  addUserToUserGroup(searchTerm) {\r\n    let user = this.searchResults.filter(function (el) {\r\n      return el.username === searchTerm;\r\n    })[0];\r\n    this.search = \"\";\r\n    this.usergroup.users.push(user);\r\n  }\r\n  deleteUser(user) {\r\n    this.usergroup.users = this.usergroup.users.filter(function (el) {\r\n      return el._id !== user._id;\r\n    });\r\n  }\r\n  /*Auto complete methods end */\r\n  delete() {\r\n    this.usergroupService.deleteUserGroup(this.usergroup[\"_id\"]).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Usergroup deleted successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllUserGroups();\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.usergroupService.updateUserGroup(this.usergroup).subscribe(data => {\r\n      var toast: Toast = {\r\n        type: 'success',\r\n        title: 'Success',\r\n        body: 'Usergroup updated successfully.',\r\n        showCloseButton: true\r\n      };\r\n      this.toasterService.pop(toast);\r\n      this.isList = true;\r\n      this.getAllUserGroups();\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.isList = true;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {AuthService} from '../services/common/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService:AuthService, private router:Router){\r\n\r\n  }\r\n  \r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n    if(this.authService.loggedIn() && state.url !== \"/\"){\r\n      return true;\r\n    }\r\n    else if(this.authService.loggedIn() && state.url === \"/\"){\r\n      this.router.navigate(['home']);\r\n      return true;\r\n    } \r\n    else if(!this.authService.loggedIn() && state.url !== \"/\"){\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    else if(state.url === \"/\")\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { Observable } from 'rxjs';\r\nimport { Privillages } from './privillages';\r\nimport { _ } from 'underscore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  isDev: boolean;\r\n  user: any;\r\n  privillages: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private pri: Privillages\r\n  ) {\r\n    this.isDev = false;\r\n    if (this.getUser() !== null && this.getUser() !== undefined) {\r\n      this.getUserPrivillages().subscribe(data => {\r\n        this.privillages = data[\"privillages\"];\r\n      });\r\n    }\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n    let url = this.prepEndpoint('login/authenticate');\r\n    return this.http.post(url, user, { headers: headers });\r\n  }\r\n\r\n  storeUserData(token, user, privillages) {\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', (typeof (user) === \"string\") ? user : JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n    this.privillages = privillages;\r\n  }\r\n\r\n  loggedIn() {\r\n    this.loadToken();\r\n    return tokenNotExpired(null, this.authToken);\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  checkPrivilege(routename) {\r\n    if (this.privillages.indexOf(routename) > -1)\r\n      return true;\r\n  }\r\n\r\n  getUserPrivillages() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.getToken()\r\n    });\r\n    let url = this.prepEndpoint('login/privillages/' + this.getUser().id);\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  forgotPassword(username) {\r\n    var user = {\r\n      \"username\":username\r\n    }\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n    let url = this.prepEndpoint('login/forgotPassword');\r\n    return this.http.post(url, user, { headers: headers });\r\n  }\r\n\r\n\r\n  hasPrevillage(homeroute) {\r\n    var privi = this.privillages;\r\n    var routes = this.pri.getPrivillages().filter(function (el) {\r\n      return el.group === homeroute\r\n    });\r\n    var count = routes.filter(function (el) {\r\n      return privi.indexOf(el.name) > -1;\r\n    }).length;\r\n    return count > 0\r\n  }\r\n\r\n  getUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  getSideMenuPage(route) {\r\n    var routes = this.pri.getPrivillages().filter(function (el) {\r\n      return el.group === route\r\n    });\r\n    var pr = _.sortBy(routes, 'order');\r\n    var privi = this.privillages;\r\n    var menu = pr.filter(function (el) {\r\n      return privi.indexOf(el.name) > -1;\r\n    })[0];\r\n    this.storeRoute(route);\r\n    return menu;\r\n  }\r\n  storeRoute(route) {\r\n    localStorage.setItem('current_route', route);\r\n  }\r\n\r\n  isRouteDisplay(route) {\r\n    if (route === localStorage.getItem('current_route')) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  prepEndpoint(ep) {\r\n    if (!this.isDev) {\r\n      return ep;\r\n    } else {\r\n      return 'https://localhost:4200/' + ep;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Privillages {\r\n    getPrivillages() {\r\n        return [\r\n            {\"name\":\"usergroup\",\"set\":false,\"group\":\"user\",\"order\":1},\r\n            {\"name\":\"user\",\"set\":false,\"group\":\"user\",\"order\":0},\r\n            {\"name\":\"home\",\"set\":false,\"group\":\"home\",\"order\":0},\r\n            {\"name\":\"machine\",\"set\":false,\"group\":\"machine\",\"order\":0},\r\n            {\"name\":\"reasons\",\"set\":false,\"group\":\"machine\",\"order\":4},\r\n            {\"name\":\"line\",\"set\":false,\"group\":\"machine\",\"order\":3},\r\n            {\"name\":\"area\",\"set\":false,\"group\":\"machine\",\"order\":2},\r\n            {\"name\":\"machinegroup\",\"set\":false,\"group\":\"machine\",\"order\":1},\r\n            {\"name\":\"settings\",\"set\":false,\"group\":\"settings\",\"order\":1},\r\n            {\"name\":\"import\",\"set\":false,\"group\":\"settings\",\"order\":2},\r\n            {\"name\":\"document\",\"set\":false,\"group\":\"machine\",\"order\":5},\r\n            {\"name\":\"part\",\"set\":false,\"group\":\"machine\",\"order\":6},\r\n            {\"name\":\"steps\",\"set\":false,\"group\":\"machine\",\"order\":7},\r\n            {\"name\":\"template\",\"set\":false,\"group\":\"machine\",\"order\":8},\r\n        ];\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MaintenanceService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  updateMaintenance(rMaintenance) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('maintenance/update/');\r\n    url = url + `${rMaintenance._id}`;\r\n    return this.http.put(url, rMaintenance, { headers: headers });\r\n  }\r\n\r\n  getRMaintenanceByMachineId(id){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('maintenance/machine/');\r\n    return this.http.get(url+id, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AreaService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addArea(area) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('area/create');\r\n    return this.http.post(url, area, { headers: headers });\r\n  }\r\n\r\n  updateArea(area) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('area/update/');\r\n    url = url + `${area._id}`;\r\n    return this.http.put(url, area, { headers: headers });\r\n  }\r\n\r\n  deleteArea(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('area/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getAreas() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('area/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addDocument(document) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('document/create');\r\n    return this.http.post(url, document, { headers: headers });\r\n  }\r\n\r\n  updateDocument(document) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('document/update/');\r\n    url = url + `${document._id}`;\r\n    return this.http.put(url, document, { headers: headers });\r\n  }\r\n\r\n  deleteDocument(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('document/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getDocuments() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('document/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  getDocumentName(searchTerm){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('document/get/');\r\n    return this.http.get(url+searchTerm, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LineService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addLine(line) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('line/create');\r\n    return this.http.post(url, line, { headers: headers });\r\n  }\r\n\r\n  updateLine(line) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('line/update/');\r\n    url = url + `${line._id}`;\r\n    return this.http.put(url, line, { headers: headers });\r\n  }\r\n\r\n  deleteLine(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('line/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getLines() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('line/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  getLineName(searchTerm){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('line/get/');\r\n    return this.http.get(url+searchTerm, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MachineService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addMachine(machine) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machine/create');\r\n    return this.http.post(url, machine, { headers: headers });\r\n  }\r\n\r\n  updateMachine(machine) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machine/update/');\r\n    url = url + `${machine._id}`;\r\n    return this.http.put(url, machine, { headers: headers });\r\n  }\r\n\r\n  deleteMachine(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machine/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getMachines() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machine/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MachinegroupService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addMachineGroup(machinegroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machinegroup/create');\r\n    return this.http.post(url, machinegroup, { headers: headers });\r\n  }\r\n\r\n  updateMachineGroup(machinegroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machinegroup/update/');\r\n    url = url + `${machinegroup._id}`;\r\n    return this.http.put(url, machinegroup, { headers: headers });\r\n  }\r\n\r\n  deleteMachineGroup(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machinegroup/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getMachineGroups() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('machinegroup/all');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addPart(part) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('part/create');\r\n    return this.http.post(url, part, { headers: headers });\r\n  }\r\n\r\n  updatePart(part) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('part/update/');\r\n    url = url + `${part._id}`;\r\n    return this.http.put(url, part, { headers: headers });\r\n  }\r\n\r\n  deletePart(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('part/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getParts() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('part/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  getPartName(searchTerm){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('part/get/');\r\n    return this.http.get(url+searchTerm, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReasonService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addReason(reason) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('reason/create');\r\n    return this.http.post(url, reason, { headers: headers });\r\n  }\r\n\r\n  updateReason(reason) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('reason/update/');\r\n    url = url + `${reason._id}`;\r\n    return this.http.put(url, reason, { headers: headers });\r\n  }\r\n\r\n  deleteReason(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('reason/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getAllReasons() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('reason/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StepgroupService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addStepgroup(stepgroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('stepgroup/create');\r\n    return this.http.post(url, stepgroup, { headers: headers });\r\n  }\r\n\r\n  updateStepgroup(stepgroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('stepgroup/update/');\r\n    url = url + `${stepgroup._id}`;\r\n    return this.http.put(url, stepgroup, { headers: headers });\r\n  }\r\n\r\n  getStepGroupName(searchTerm){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('stepgroup/get/');\r\n    return this.http.get(url+searchTerm, { headers: headers });\r\n  }\r\n\r\n  deleteStepgroup(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('stepgroup/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getAllStepgroups() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('stepgroup/all');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  addStep(step) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('step/create');\r\n    return this.http.post(url, step, { headers: headers });\r\n  }\r\n\r\n  updateStep(step) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('step/update/');\r\n    url = url + `${step._id}`;\r\n    return this.http.put(url, step, { headers: headers });\r\n  }\r\n\r\n  deleteStep(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('step/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getAllSteps() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('step/all');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  getStepById(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('step/getById/');\r\n    return this.http.get(url + id, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TemplateService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addTemplate(template) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('template/create');\r\n    return this.http.post(url, template, { headers: headers });\r\n  }\r\n\r\n  updateTemplate(template) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('template/update/');\r\n    url = url + `${template._id}`;\r\n    return this.http.put(url, template, { headers: headers });\r\n  }\r\n\r\n  deleteTemplate(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('template/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getAllTemplates() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('template/all');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  createImport(importdata) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('import/create');\r\n    return this.http.post(url, importdata, { headers: headers });\r\n  }\r\n\r\n  getImportHistory() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('import/importHistory');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  getSettings() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('settings/all');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  updateSetting(setting){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('settings/update/');\r\n    url = url + `${setting._id}`;\r\n    return this.http.put(url, setting, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addUser(user) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('users/create');\r\n    return this.http.post(url, user, { headers: headers });\r\n  }\r\n\r\n  updateUser(user) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('users/update/');\r\n    url = url + `${user._id}`;\r\n    return this.http.put(url, user, { headers: headers });\r\n  }\r\n\r\n  deleteUser(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('users/delete/');\r\n    return this.http.delete(url + id, { headers: headers });\r\n  }\r\n\r\n  getUsers() {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('users/all/');\r\n    return this.http.get(url, { headers: headers });\r\n  }\r\n\r\n  getUserName(searchTerm){\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('users/get/');\r\n    return this.http.get(url+searchTerm, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { AuthService } from '../common/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsergroupService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  addUserGroup(usergroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('usergroups/create');\r\n    return this.http.post(url, usergroup, { headers: headers });\r\n  }\r\n\r\n  updateUserGroup(usergroup) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('usergroups/update/');\r\n    url = url + `${usergroup._id}`;\r\n    return this.http.put(url, usergroup, { headers: headers });\r\n  }\r\n\r\n  deleteUserGroup(id) {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': this.authService.getToken()\r\n    });\r\n    let url = this.authService.prepEndpoint('usergroups/delete/');\r\n    return this.http.delete(url + id,{headers: headers});\r\n  }\r\n\r\n  getUserGroups() {\r\n    let headers = new HttpHeaders().set('Authorization', this.authService.getToken());\r\n    let url = this.authService.prepEndpoint('usergroups/all/');\r\n    return this.http.get(url,{headers: headers});\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}